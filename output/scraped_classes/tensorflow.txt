{
    "tensorflow.AggregationMethod": {
        "short name": "AggregationMethod",
        "parameters": {}
    },
    "tensorflow.CriticalSection": {
        "short name": "CriticalSection",
        "parameters": {
            "name": "None",
            "shared_name": "None",
            "critical_section_def": "None",
            "import_scope": "None"
        }
    },
    "tensorflow.dtypes.DType": {
        "short name": "DType",
        "parameters": {}
    },
    "tensorflow.DeviceSpec": {
        "short name": "DeviceSpec",
        "parameters": {
            "job": "None",
            "replica": "None",
            "task": "None",
            "device_type": "None",
            "device_index": "None"
        }
    },
    "tensorflow.GradientTape": {
        "short name": "GradientTape",
        "parameters": {
            "persistent": "False",
            "watch_accessed_variables": "True"
        }
    },
    "tensorflow.Graph": {
        "short name": "Graph",
        "parameters": {}
    },
    "tensorflow.IndexedSlices": {
        "short name": "IndexedSlices",
        "parameters": {
            "values": null,
            "indices": null,
            "dense_shape": "None"
        }
    },
    "tensorflow.IndexedSlicesSpec": {
        "short name": "IndexedSlicesSpec",
        "parameters": {
            "shape": "None",
            "dtype": "tf.dtypes.float32",
            "indices_dtype": "tf.dtypes.int64",
            "dense_shape_dtype": "None",
            "indices_shape": "None"
        }
    },
    "tensorflow.Module": {
        "short name": "Module",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.Operation": {
        "short name": "Operation",
        "parameters": {
            "node_def": null,
            "g": null,
            "inputs": "None",
            "output_types": "None",
            "control_inputs": "None",
            "input_types": "None",
            "original_op": "None",
            "op_def": "None"
        }
    },
    "tensorflow.OptionalSpec": {
        "short name": "OptionalSpec",
        "parameters": {
            "element_spec": null
        }
    },
    "tensorflow.RaggedTensor": {
        "short name": "RaggedTensor",
        "parameters": {}
    },
    "tensorflow.RaggedTensorSpec": {
        "short name": "RaggedTensorSpec",
        "parameters": {
            "shape": "None",
            "dtype": "tf.dtypes.float32",
            "ragged_rank": "None",
            "row_splits_dtype": "tf.dtypes.int64",
            "flat_values_spec": "None"
        }
    },
    "tensorflow.RegisterGradient": {
        "short name": "RegisterGradient",
        "parameters": {
            "op_type": null
        }
    },
    "tensorflow.sparse.SparseTensor": {
        "short name": "SparseTensor",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null
        }
    },
    "tensorflow.SparseTensorSpec": {
        "short name": "SparseTensorSpec",
        "parameters": {
            "shape": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.Tensor": {
        "short name": "Tensor",
        "parameters": {
            "op": null,
            "value_index": null,
            "dtype": null
        }
    },
    "tensorflow.TensorArray": {
        "short name": "TensorArray",
        "parameters": {
            "dtype": null,
            "size": "None",
            "dynamic_size": "None",
            "clear_after_read": "None",
            "tensor_array_name": "None",
            "handle": "None",
            "flow": "None",
            "infer_shape": "True",
            "element_shape": "None",
            "colocate_with_first_write_call": "True",
            "name": "None"
        }
    },
    "tensorflow.TensorArraySpec": {
        "short name": "TensorArraySpec",
        "parameters": {
            "element_shape": "None",
            "dtype": "tf.dtypes.float32",
            "dynamic_size": "False",
            "infer_shape": "True"
        }
    },
    "tensorflow.TensorShape": {
        "short name": "TensorShape",
        "parameters": {
            "dims": null
        }
    },
    "tensorflow.TensorSpec": {
        "short name": "TensorSpec",
        "parameters": {
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.TypeSpec": {
        "short name": "TypeSpec",
        "parameters": {}
    },
    "tensorflow.UnconnectedGradients": {
        "short name": "UnconnectedGradients",
        "parameters": {}
    },
    "tensorflow.Variable": {
        "short name": "Variable",
        "parameters": {
            "initial_value": "None",
            "trainable": "None",
            "validate_shape": "True",
            "caching_device": "None",
            "name": "None",
            "variable_def": "None",
            "dtype": "None",
            "import_scope": "None",
            "constraint": "None",
            "synchronization": "tf.VariableSynchronization.AUTO",
            "aggregation": "tf.compat.v1.VariableAggregation.NONE",
            "shape": "None"
        }
    },
    "tensorflow.VariableAggregation": {
        "short name": "VariableAggregation",
        "parameters": {}
    },
    "tensorflow.VariableSynchronization": {
        "short name": "VariableSynchronization",
        "parameters": {}
    },
    "tensorflow.constant_initializer": {
        "short name": "constant_initializer",
        "parameters": {
            "value": "0"
        }
    },
    "tensorflow.name_scope": {
        "short name": "name_scope",
        "parameters": {
            "name": null
        }
    },
    "tensorflow.ones_initializer": {
        "short name": "ones_initializer",
        "parameters": {}
    },
    "tensorflow.random_normal_initializer": {
        "short name": "random_normal_initializer",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.random_uniform_initializer": {
        "short name": "random_uniform_initializer",
        "parameters": {
            "minval": "-0.05",
            "maxval": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.zeros_initializer": {
        "short name": "zeros_initializer",
        "parameters": {}
    },
    "tensorflow.autodiff.ForwardAccumulator": {
        "short name": "ForwardAccumulator",
        "parameters": {
            "primals": null,
            "tangents": null
        }
    },
    "tensorflow.config.LogicalDevice": {
        "short name": "LogicalDevice",
        "parameters": {
            "name": null,
            "device_type": null
        }
    },
    "tensorflow.config.LogicalDeviceConfiguration": {
        "short name": "LogicalDeviceConfiguration",
        "parameters": {
            "memory_limit": "None",
            "experimental_priority": "None"
        }
    },
    "tensorflow.config.PhysicalDevice": {
        "short name": "PhysicalDevice",
        "parameters": {
            "name": null,
            "device_type": null
        }
    },
    "tensorflow.data.Dataset": {
        "short name": "Dataset",
        "parameters": {
            "variant_tensor": null
        }
    },
    "tensorflow.data.DatasetSpec": {
        "short name": "DatasetSpec",
        "parameters": {
            "element_spec": null,
            "dataset_shape": "()"
        }
    },
    "tensorflow.data.FixedLengthRecordDataset": {
        "short name": "FixedLengthRecordDataset",
        "parameters": {
            "filenames": null,
            "record_bytes": null,
            "header_bytes": "None",
            "footer_bytes": "None",
            "buffer_size": "None",
            "compression_type": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.data.Iterator": {
        "short name": "Iterator",
        "parameters": {}
    },
    "tensorflow.data.IteratorSpec": {
        "short name": "IteratorSpec",
        "parameters": {
            "element_spec": null
        }
    },
    "tensorflow.data.Options": {
        "short name": "Options",
        "parameters": {}
    },
    "tensorflow.data.TFRecordDataset": {
        "short name": "TFRecordDataset",
        "parameters": {
            "filenames": null,
            "compression_type": "None",
            "buffer_size": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.data.TextLineDataset": {
        "short name": "TextLineDataset",
        "parameters": {
            "filenames": null,
            "compression_type": "None",
            "buffer_size": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.data.ThreadingOptions": {
        "short name": "ThreadingOptions",
        "parameters": {}
    },
    "tensorflow.distribute.CrossDeviceOps": {
        "short name": "CrossDeviceOps",
        "parameters": {}
    },
    "tensorflow.distribute.DistributedDataset": {
        "short name": "DistributedDataset",
        "parameters": {}
    },
    "tensorflow.distribute.DistributedIterator": {
        "short name": "DistributedIterator",
        "parameters": {}
    },
    "tensorflow.distribute.DistributedValues": {
        "short name": "DistributedValues",
        "parameters": {
            "values": null
        }
    },
    "tensorflow.distribute.HierarchicalCopyAllReduce": {
        "short name": "HierarchicalCopyAllReduce",
        "parameters": {
            "num_packs": "1"
        }
    },
    "tensorflow.distribute.InputContext": {
        "short name": "InputContext",
        "parameters": {
            "num_input_pipelines": "1",
            "input_pipeline_id": "0",
            "num_replicas_in_sync": "1"
        }
    },
    "tensorflow.distribute.InputOptions": {
        "short name": "InputOptions",
        "parameters": {
            "experimental_fetch_to_device": "None",
            "experimental_replication_mode": "tf.distribute.InputReplicationMode.PER_WORKER",
            "experimental_place_dataset_on_device": "False",
            "experimental_per_replica_buffer_size": "1"
        }
    },
    "tensorflow.distribute.InputReplicationMode": {
        "short name": "InputReplicationMode",
        "parameters": {}
    },
    "tensorflow.distribute.MirroredStrategy": {
        "short name": "MirroredStrategy",
        "parameters": {
            "devices": "None",
            "cross_device_ops": "None"
        }
    },
    "tensorflow.distribute.MultiWorkerMirroredStrategy": {
        "short name": "MultiWorkerMirroredStrategy",
        "parameters": {
            "cluster_resolver": "None",
            "communication_options": "None"
        }
    },
    "tensorflow.distribute.NcclAllReduce": {
        "short name": "NcclAllReduce",
        "parameters": {
            "num_packs": "1"
        }
    },
    "tensorflow.distribute.OneDeviceStrategy": {
        "short name": "OneDeviceStrategy",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.distribute.experimental.ParameterServerStrategy": {
        "short name": "ParameterServerStrategy",
        "parameters": {
            "cluster_resolver": null,
            "variable_partitioner": "None"
        }
    },
    "tensorflow.distribute.ReduceOp": {
        "short name": "ReduceOp",
        "parameters": {}
    },
    "tensorflow.distribute.ReductionToOneDevice": {
        "short name": "ReductionToOneDevice",
        "parameters": {
            "reduce_to_device": "None",
            "accumulation_fn": "None"
        }
    },
    "tensorflow.distribute.ReplicaContext": {
        "short name": "ReplicaContext",
        "parameters": {
            "strategy": null,
            "replica_id_in_sync_group": null
        }
    },
    "tensorflow.distribute.RunOptions": {
        "short name": "RunOptions",
        "parameters": {
            "experimental_enable_dynamic_batch_size": "True",
            "experimental_bucketizing_dynamic_shape": "False",
            "experimental_xla_options": "None"
        }
    },
    "tensorflow.distribute.Server": {
        "short name": "Server",
        "parameters": {
            "server_or_cluster_def": null,
            "job_name": "None",
            "task_index": "None",
            "protocol": "None",
            "config": "None",
            "start": "True"
        }
    },
    "tensorflow.distribute.Strategy": {
        "short name": "Strategy",
        "parameters": {
            "extended": null
        }
    },
    "tensorflow.distribute.StrategyExtended": {
        "short name": "StrategyExtended",
        "parameters": {
            "container_strategy": null
        }
    },
    "tensorflow.distribute.TPUStrategy": {
        "short name": "TPUStrategy",
        "parameters": {
            "tpu_cluster_resolver": "None",
            "experimental_device_assignment": "None",
            "experimental_spmd_xla_partitioning": "False"
        }
    },
    "tensorflow.errors.AbortedError": {
        "short name": "AbortedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.AlreadyExistsError": {
        "short name": "AlreadyExistsError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.CancelledError": {
        "short name": "CancelledError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.DataLossError": {
        "short name": "DataLossError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.DeadlineExceededError": {
        "short name": "DeadlineExceededError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.FailedPreconditionError": {
        "short name": "FailedPreconditionError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.InternalError": {
        "short name": "InternalError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.InvalidArgumentError": {
        "short name": "InvalidArgumentError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.NotFoundError": {
        "short name": "NotFoundError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.OpError": {
        "short name": "OpError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "error_code": null,
            "*args": null
        }
    },
    "tensorflow.errors.OperatorNotAllowedInGraphError": {
        "short name": "OperatorNotAllowedInGraphError",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.errors.OutOfRangeError": {
        "short name": "OutOfRangeError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.PermissionDeniedError": {
        "short name": "PermissionDeniedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.ResourceExhaustedError": {
        "short name": "ResourceExhaustedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.UnauthenticatedError": {
        "short name": "UnauthenticatedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.UnavailableError": {
        "short name": "UnavailableError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.UnimplementedError": {
        "short name": "UnimplementedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.UnknownError": {
        "short name": "UnknownError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.estimator.BaselineClassifier": {
        "short name": "BaselineClassifier",
        "parameters": {
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE"
        }
    },
    "tensorflow.estimator.BaselineEstimator": {
        "short name": "BaselineEstimator",
        "parameters": {
            "head": null,
            "model_dir": "None",
            "optimizer": "'Ftrl'",
            "config": "None"
        }
    },
    "tensorflow.estimator.BaselineRegressor": {
        "short name": "BaselineRegressor",
        "parameters": {
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE"
        }
    },
    "tensorflow.estimator.BestExporter": {
        "short name": "BestExporter",
        "parameters": {
            "name": "'best_exporter'",
            "serving_input_receiver_fn": "None",
            "event_file_pattern": "'eval/*.tfevents.*'",
            "compare_fn": "_loss_smaller",
            "assets_extra": "None",
            "as_text": "False",
            "exports_to_keep": "5"
        }
    },
    "tensorflow.estimator.BinaryClassHead": {
        "short name": "BinaryClassHead",
        "parameters": {
            "weight_column": "None",
            "thresholds": "None",
            "label_vocabulary": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "loss_fn": "None",
            "name": "None"
        }
    },
    "tensorflow.estimator.CheckpointSaverHook": {
        "short name": "CheckpointSaverHook",
        "parameters": {
            "checkpoint_dir": null,
            "save_secs": "None",
            "save_steps": "None",
            "saver": "None",
            "checkpoint_basename": "'model.ckpt'",
            "scaffold": "None",
            "listeners": "None",
            "save_graph_def": "True"
        }
    },
    "tensorflow.estimator.CheckpointSaverListener": {
        "short name": "CheckpointSaverListener",
        "parameters": {}
    },
    "tensorflow.estimator.DNNClassifier": {
        "short name": "DNNClassifier",
        "parameters": {
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "batch_norm": "False"
        }
    },
    "tensorflow.estimator.DNNEstimator": {
        "short name": "DNNEstimator",
        "parameters": {
            "head": null,
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "config": "None",
            "warm_start_from": "None",
            "batch_norm": "False"
        }
    },
    "tensorflow.estimator.DNNLinearCombinedClassifier": {
        "short name": "DNNLinearCombinedClassifier",
        "parameters": {
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.DNNLinearCombinedEstimator": {
        "short name": "DNNLinearCombinedEstimator",
        "parameters": {
            "head": null,
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "config": "None",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.DNNLinearCombinedRegressor": {
        "short name": "DNNLinearCombinedRegressor",
        "parameters": {
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.DNNRegressor": {
        "short name": "DNNRegressor",
        "parameters": {
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "batch_norm": "False"
        }
    },
    "tensorflow.estimator.Estimator": {
        "short name": "Estimator",
        "parameters": {
            "model_fn": null,
            "model_dir": "None",
            "config": "None",
            "params": "None",
            "warm_start_from": "None"
        }
    },
    "tensorflow.estimator.EstimatorSpec": {
        "short name": "EstimatorSpec",
        "parameters": {
            "mode": null,
            "predictions": "None",
            "loss": "None",
            "train_op": "None",
            "eval_metric_ops": "None",
            "export_outputs": "None",
            "training_chief_hooks": "None",
            "training_hooks": "None",
            "scaffold": "None",
            "evaluation_hooks": "None",
            "prediction_hooks": "None"
        }
    },
    "tensorflow.estimator.EvalSpec": {
        "short name": "EvalSpec",
        "parameters": {
            "input_fn": null,
            "steps": "100",
            "name": "None",
            "hooks": "None",
            "exporters": "None",
            "start_delay_secs": "120",
            "throttle_secs": "600"
        }
    },
    "tensorflow.estimator.Exporter": {
        "short name": "Exporter",
        "parameters": {}
    },
    "tensorflow.estimator.FeedFnHook": {
        "short name": "FeedFnHook",
        "parameters": {
            "feed_fn": null
        }
    },
    "tensorflow.estimator.FinalExporter": {
        "short name": "FinalExporter",
        "parameters": {
            "name": null,
            "serving_input_receiver_fn": null,
            "assets_extra": "None",
            "as_text": "False"
        }
    },
    "tensorflow.estimator.FinalOpsHook": {
        "short name": "FinalOpsHook",
        "parameters": {
            "final_ops": null,
            "final_ops_feed_dict": "None"
        }
    },
    "tensorflow.estimator.GlobalStepWaiterHook": {
        "short name": "GlobalStepWaiterHook",
        "parameters": {
            "wait_until_step": null
        }
    },
    "tensorflow.estimator.Head": {
        "short name": "Head",
        "parameters": {}
    },
    "tensorflow.estimator.LatestExporter": {
        "short name": "LatestExporter",
        "parameters": {
            "name": null,
            "serving_input_receiver_fn": null,
            "assets_extra": "None",
            "as_text": "False",
            "exports_to_keep": "5"
        }
    },
    "tensorflow.estimator.LinearClassifier": {
        "short name": "LinearClassifier",
        "parameters": {
            "feature_columns": null,
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.LinearEstimator": {
        "short name": "LinearEstimator",
        "parameters": {
            "head": null,
            "feature_columns": null,
            "model_dir": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "sparse_combiner": "'sum'",
            "warm_start_from": "None"
        }
    },
    "tensorflow.estimator.LinearRegressor": {
        "short name": "LinearRegressor",
        "parameters": {
            "feature_columns": null,
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.LoggingTensorHook": {
        "short name": "LoggingTensorHook",
        "parameters": {
            "tensors": null,
            "every_n_iter": "None",
            "every_n_secs": "None",
            "at_end": "False",
            "formatter": "None"
        }
    },
    "tensorflow.estimator.LogisticRegressionHead": {
        "short name": "LogisticRegressionHead",
        "parameters": {
            "weight_column": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "name": "None"
        }
    },
    "tensorflow.estimator.ModeKeys": {
        "short name": "ModeKeys",
        "parameters": {}
    },
    "tensorflow.estimator.MultiClassHead": {
        "short name": "MultiClassHead",
        "parameters": {
            "n_classes": null,
            "weight_column": "None",
            "label_vocabulary": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "loss_fn": "None",
            "name": "None"
        }
    },
    "tensorflow.estimator.MultiHead": {
        "short name": "MultiHead",
        "parameters": {
            "heads": null,
            "head_weights": "None"
        }
    },
    "tensorflow.estimator.MultiLabelHead": {
        "short name": "MultiLabelHead",
        "parameters": {
            "n_classes": null,
            "weight_column": "None",
            "thresholds": "None",
            "label_vocabulary": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "loss_fn": "None",
            "classes_for_class_based_metrics": "None",
            "name": "None"
        }
    },
    "tensorflow.estimator.NanLossDuringTrainingError": {
        "short name": "NanLossDuringTrainingError",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.estimator.NanTensorHook": {
        "short name": "NanTensorHook",
        "parameters": {
            "loss_tensor": null,
            "fail_on_nan_loss": "True"
        }
    },
    "tensorflow.estimator.PoissonRegressionHead": {
        "short name": "PoissonRegressionHead",
        "parameters": {
            "label_dimension": "1",
            "weight_column": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "compute_full_loss": "True",
            "name": "None"
        }
    },
    "tensorflow.estimator.ProfilerHook": {
        "short name": "ProfilerHook",
        "parameters": {
            "save_steps": "None",
            "save_secs": "None",
            "output_dir": "''",
            "show_dataflow": "True",
            "show_memory": "False"
        }
    },
    "tensorflow.estimator.RegressionHead": {
        "short name": "RegressionHead",
        "parameters": {
            "label_dimension": "1",
            "weight_column": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "loss_fn": "None",
            "inverse_link_fn": "None",
            "name": "None"
        }
    },
    "tensorflow.estimator.RunConfig": {
        "short name": "RunConfig",
        "parameters": {
            "model_dir": "None",
            "tf_random_seed": "None",
            "save_summary_steps": "100",
            "save_checkpoints_steps": "_USE_DEFAULT",
            "save_checkpoints_secs": "_USE_DEFAULT",
            "session_config": "None",
            "keep_checkpoint_max": "5",
            "keep_checkpoint_every_n_hours": "10000",
            "log_step_count_steps": "100",
            "train_distribute": "None",
            "device_fn": "None",
            "protocol": "None",
            "eval_distribute": "None",
            "experimental_distribute": "None",
            "experimental_max_worker_delay_secs": "None",
            "session_creation_timeout_secs": "7200",
            "checkpoint_save_graph_def": "True"
        }
    },
    "tensorflow.estimator.SecondOrStepTimer": {
        "short name": "SecondOrStepTimer",
        "parameters": {
            "every_secs": "None",
            "every_steps": "None"
        }
    },
    "tensorflow.estimator.SessionRunArgs": {
        "short name": "SessionRunArgs",
        "parameters": {
            "fetches": null,
            "feed_dict": "None",
            "options": "None"
        }
    },
    "tensorflow.estimator.SessionRunContext": {
        "short name": "SessionRunContext",
        "parameters": {
            "original_args": null,
            "session": null
        }
    },
    "tensorflow.estimator.SessionRunHook": {
        "short name": "SessionRunHook",
        "parameters": {}
    },
    "tensorflow.estimator.SessionRunValues": {
        "short name": "SessionRunValues",
        "parameters": {
            "results": null,
            "options": null,
            "run_metadata": null
        }
    },
    "tensorflow.estimator.StepCounterHook": {
        "short name": "StepCounterHook",
        "parameters": {
            "every_n_steps": "100",
            "every_n_secs": "None",
            "output_dir": "None",
            "summary_writer": "None"
        }
    },
    "tensorflow.estimator.StopAtStepHook": {
        "short name": "StopAtStepHook",
        "parameters": {
            "num_steps": "None",
            "last_step": "None"
        }
    },
    "tensorflow.estimator.SummarySaverHook": {
        "short name": "SummarySaverHook",
        "parameters": {
            "save_steps": "None",
            "save_secs": "None",
            "output_dir": "None",
            "summary_writer": "None",
            "scaffold": "None",
            "summary_op": "None"
        }
    },
    "tensorflow.estimator.TrainSpec": {
        "short name": "TrainSpec",
        "parameters": {
            "input_fn": null,
            "max_steps": "None",
            "hooks": "None",
            "saving_listeners": "None"
        }
    },
    "tensorflow.estimator.VocabInfo": {
        "short name": "VocabInfo",
        "parameters": {
            "new_vocab": null,
            "new_vocab_size": null,
            "num_oov_buckets": null,
            "old_vocab": null,
            "old_vocab_size": "-1",
            "backup_initializer": "None",
            "axis": "0"
        }
    },
    "tensorflow.estimator.WarmStartSettings": {
        "short name": "WarmStartSettings",
        "parameters": {
            "ckpt_to_initialize_from": null,
            "vars_to_warm_start": "'.*'",
            "var_name_to_vocab_info": "None",
            "var_name_to_prev_var_name": "None"
        }
    },
    "tensorflow.experimental.BatchableExtensionType": {
        "short name": "BatchableExtensionType",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.DynamicRaggedShape": {
        "short name": "DynamicRaggedShape",
        "parameters": {
            "row_partitions": null,
            "inner_shape": null,
            "dtype": "None",
            "validate": "False"
        }
    },
    "tensorflow.experimental.ExtensionType": {
        "short name": "ExtensionType",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.ExtensionTypeBatchEncoder": {
        "short name": "ExtensionTypeBatchEncoder",
        "parameters": {}
    },
    "tensorflow.experimental.Optional": {
        "short name": "Optional",
        "parameters": {}
    },
    "tensorflow.experimental.RowPartition": {
        "short name": "RowPartition",
        "parameters": {
            "row_splits": null,
            "row_lengths": "None",
            "value_rowids": "None",
            "nrows": "None",
            "uniform_row_length": "None",
            "nvals": "None",
            "internal": "False"
        }
    },
    "tensorflow.image.ResizeMethod": {
        "short name": "ResizeMethod",
        "parameters": {}
    },
    "tensorflow.io.FixedLenFeature": {
        "short name": "FixedLenFeature",
        "parameters": {
            "shape": null,
            "dtype": null,
            "default_value": "None"
        }
    },
    "tensorflow.io.FixedLenSequenceFeature": {
        "short name": "FixedLenSequenceFeature",
        "parameters": {
            "shape": null,
            "dtype": null,
            "allow_missing": "False",
            "default_value": "None"
        }
    },
    "tensorflow.io.RaggedFeature": {
        "short name": "RaggedFeature",
        "parameters": {
            "dtype": null,
            "value_key": "None",
            "partitions": "()",
            "row_splits_dtype": "tf.dtypes.int32",
            "validate": "False"
        }
    },
    "tensorflow.io.SparseFeature": {
        "short name": "SparseFeature",
        "parameters": {
            "index_key": null,
            "value_key": null,
            "dtype": null,
            "size": null,
            "already_sorted": "False"
        }
    },
    "tensorflow.io.TFRecordOptions": {
        "short name": "TFRecordOptions",
        "parameters": {
            "compression_type": "None",
            "flush_mode": "None",
            "input_buffer_size": "None",
            "output_buffer_size": "None",
            "window_bits": "None",
            "compression_level": "None",
            "compression_method": "None",
            "mem_level": "None",
            "compression_strategy": "None"
        }
    },
    "tensorflow.io.TFRecordWriter": {
        "short name": "TFRecordWriter",
        "parameters": {
            "path": null,
            "options": "None"
        }
    },
    "tensorflow.io.VarLenFeature": {
        "short name": "VarLenFeature",
        "parameters": {
            "dtype": null
        }
    },
    "tensorflow.keras.Model": {
        "short name": "Model",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.Sequential": {
        "short name": "Sequential",
        "parameters": {
            "layers": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperator": {
        "short name": "LinearOperator",
        "parameters": {
            "dtype": null,
            "graph_parents": "None",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None",
            "parameters": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorAdjoint": {
        "short name": "LinearOperatorAdjoint",
        "parameters": {
            "operator": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorBlockDiag": {
        "short name": "LinearOperatorBlockDiag",
        "parameters": {
            "operators": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": {
        "short name": "LinearOperatorBlockLowerTriangular",
        "parameters": {
            "operators": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorBlockLowerTriangular'"
        }
    },
    "tensorflow.linalg.LinearOperatorCirculant": {
        "short name": "LinearOperatorCirculant",
        "parameters": {
            "spectrum": null,
            "input_output_dtype": "tf.dtypes.complex64",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "name": "'LinearOperatorCirculant'"
        }
    },
    "tensorflow.linalg.LinearOperatorCirculant2D": {
        "short name": "LinearOperatorCirculant2D",
        "parameters": {
            "spectrum": null,
            "input_output_dtype": "tf.dtypes.complex64",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "name": "'LinearOperatorCirculant2D'"
        }
    },
    "tensorflow.linalg.LinearOperatorCirculant3D": {
        "short name": "LinearOperatorCirculant3D",
        "parameters": {
            "spectrum": null,
            "input_output_dtype": "tf.dtypes.complex64",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "name": "'LinearOperatorCirculant3D'"
        }
    },
    "tensorflow.linalg.LinearOperatorComposition": {
        "short name": "LinearOperatorComposition",
        "parameters": {
            "operators": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorDiag": {
        "short name": "LinearOperatorDiag",
        "parameters": {
            "diag": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorDiag'"
        }
    },
    "tensorflow.linalg.LinearOperatorFullMatrix": {
        "short name": "LinearOperatorFullMatrix",
        "parameters": {
            "matrix": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorFullMatrix'"
        }
    },
    "tensorflow.linalg.LinearOperatorHouseholder": {
        "short name": "LinearOperatorHouseholder",
        "parameters": {
            "reflection_axis": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorHouseholder'"
        }
    },
    "tensorflow.linalg.LinearOperatorIdentity": {
        "short name": "LinearOperatorIdentity",
        "parameters": {
            "num_rows": null,
            "batch_shape": "None",
            "dtype": "None",
            "is_non_singular": "True",
            "is_self_adjoint": "True",
            "is_positive_definite": "True",
            "is_square": "True",
            "assert_proper_shapes": "False",
            "name": "'LinearOperatorIdentity'"
        }
    },
    "tensorflow.linalg.LinearOperatorInversion": {
        "short name": "LinearOperatorInversion",
        "parameters": {
            "operator": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorKronecker": {
        "short name": "LinearOperatorKronecker",
        "parameters": {
            "operators": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorLowRankUpdate": {
        "short name": "LinearOperatorLowRankUpdate",
        "parameters": {
            "base_operator": null,
            "u": null,
            "diag_update": "None",
            "v": "None",
            "is_diag_update_positive": "None",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorLowRankUpdate'"
        }
    },
    "tensorflow.linalg.LinearOperatorLowerTriangular": {
        "short name": "LinearOperatorLowerTriangular",
        "parameters": {
            "tril": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorLowerTriangular'"
        }
    },
    "tensorflow.linalg.LinearOperatorPermutation": {
        "short name": "LinearOperatorPermutation",
        "parameters": {
            "perm": null,
            "dtype": "tf.dtypes.float32",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorPermutation'"
        }
    },
    "tensorflow.linalg.LinearOperatorScaledIdentity": {
        "short name": "LinearOperatorScaledIdentity",
        "parameters": {
            "num_rows": null,
            "multiplier": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "assert_proper_shapes": "False",
            "name": "'LinearOperatorScaledIdentity'"
        }
    },
    "tensorflow.linalg.LinearOperatorToeplitz": {
        "short name": "LinearOperatorToeplitz",
        "parameters": {
            "col": null,
            "row": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorToeplitz'"
        }
    },
    "tensorflow.linalg.LinearOperatorTridiag": {
        "short name": "LinearOperatorTridiag",
        "parameters": {
            "diagonals": null,
            "diagonals_format": "_COMPACT",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorTridiag'"
        }
    },
    "tensorflow.linalg.LinearOperatorZeros": {
        "short name": "LinearOperatorZeros",
        "parameters": {
            "num_rows": null,
            "num_columns": "None",
            "batch_shape": "None",
            "dtype": "None",
            "is_non_singular": "False",
            "is_self_adjoint": "True",
            "is_positive_definite": "False",
            "is_square": "True",
            "assert_proper_shapes": "False",
            "name": "'LinearOperatorZeros'"
        }
    },
    "tensorflow.lite.Interpreter": {
        "short name": "Interpreter",
        "parameters": {
            "model_path": "None",
            "model_content": "None",
            "experimental_delegates": "None",
            "num_threads": "None",
            "experimental_op_resolver_type": "tf.lite.experimental.OpResolverType.AUTO",
            "experimental_preserve_all_tensors": "False"
        }
    },
    "tensorflow.lite.OpsSet": {
        "short name": "OpsSet",
        "parameters": {}
    },
    "tensorflow.lite.Optimize": {
        "short name": "Optimize",
        "parameters": {}
    },
    "tensorflow.lite.RepresentativeDataset": {
        "short name": "RepresentativeDataset",
        "parameters": {
            "input_gen": null
        }
    },
    "tensorflow.lite.TFLiteConverter": {
        "short name": "TFLiteConverter",
        "parameters": {
            "funcs": null,
            "trackable_obj": "None"
        }
    },
    "tensorflow.lite.TargetSpec": {
        "short name": "TargetSpec",
        "parameters": {
            "supported_ops": "None",
            "supported_types": "None",
            "experimental_select_user_tf_ops": "None",
            "experimental_supported_backends": "None"
        }
    },
    "tensorflow.lookup.KeyValueTensorInitializer": {
        "short name": "KeyValueTensorInitializer",
        "parameters": {
            "keys": null,
            "values": null,
            "key_dtype": "None",
            "value_dtype": "None",
            "name": "None"
        }
    },
    "tensorflow.lookup.StaticHashTable": {
        "short name": "StaticHashTable",
        "parameters": {
            "initializer": null,
            "default_value": null,
            "name": "None",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.lookup.StaticVocabularyTable": {
        "short name": "StaticVocabularyTable",
        "parameters": {
            "initializer": null,
            "num_oov_buckets": null,
            "lookup_key_dtype": "None",
            "name": "None",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.lookup.TextFileIndex": {
        "short name": "TextFileIndex",
        "parameters": {}
    },
    "tensorflow.lookup.TextFileInitializer": {
        "short name": "TextFileInitializer",
        "parameters": {
            "filename": null,
            "key_dtype": null,
            "key_index": null,
            "value_dtype": null,
            "value_index": null,
            "vocab_size": "None",
            "delimiter": "'\\t'",
            "name": "None",
            "value_index_offset": "0"
        }
    },
    "tensorflow.nn.RNNCellDeviceWrapper": {
        "short name": "RNNCellDeviceWrapper",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.nn.RNNCellDropoutWrapper": {
        "short name": "RNNCellDropoutWrapper",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.nn.RNNCellResidualWrapper": {
        "short name": "RNNCellResidualWrapper",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.queue.FIFOQueue": {
        "short name": "FIFOQueue",
        "parameters": {
            "capacity": null,
            "dtypes": null,
            "shapes": "None",
            "names": "None",
            "shared_name": "None",
            "name": "'fifo_queue'"
        }
    },
    "tensorflow.queue.PaddingFIFOQueue": {
        "short name": "PaddingFIFOQueue",
        "parameters": {
            "capacity": null,
            "dtypes": null,
            "shapes": null,
            "names": "None",
            "shared_name": "None",
            "name": "'padding_fifo_queue'"
        }
    },
    "tensorflow.queue.PriorityQueue": {
        "short name": "PriorityQueue",
        "parameters": {
            "capacity": null,
            "types": null,
            "shapes": "None",
            "names": "None",
            "shared_name": "None",
            "name": "'priority_queue'"
        }
    },
    "tensorflow.queue.QueueBase": {
        "short name": "QueueBase",
        "parameters": {
            "dtypes": null,
            "shapes": null,
            "names": null,
            "queue_ref": null
        }
    },
    "tensorflow.queue.RandomShuffleQueue": {
        "short name": "RandomShuffleQueue",
        "parameters": {
            "capacity": null,
            "min_after_dequeue": null,
            "dtypes": null,
            "shapes": "None",
            "names": "None",
            "seed": "None",
            "shared_name": "None",
            "name": "'random_shuffle_queue'"
        }
    },
    "tensorflow.random.Algorithm": {
        "short name": "Algorithm",
        "parameters": {}
    },
    "tensorflow.random.Generator": {
        "short name": "Generator",
        "parameters": {
            "copy_from": "None",
            "state": "None",
            "alg": "None"
        }
    },
    "tensorflow.saved_model.Asset": {
        "short name": "Asset",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.saved_model.LoadOptions": {
        "short name": "LoadOptions",
        "parameters": {
            "allow_partial_checkpoint": "False",
            "experimental_io_device": "None",
            "experimental_skip_checkpoint": "False"
        }
    },
    "tensorflow.saved_model.SaveOptions": {
        "short name": "SaveOptions",
        "parameters": {
            "namespace_whitelist": "None",
            "save_debug_info": "False",
            "function_aliases": "None",
            "experimental_io_device": "None",
            "experimental_variable_policy": "None",
            "experimental_custom_gradients": "True"
        }
    },
    "tensorflow.summary.SummaryWriter": {
        "short name": "SummaryWriter",
        "parameters": {}
    },
    "tensorflow.test.Benchmark": {
        "short name": "Benchmark",
        "parameters": {}
    },
    "tensorflow.test.TestCase": {
        "short name": "TestCase",
        "parameters": {
            "methodName": "'runTest'"
        }
    },
    "tensorflow.tpu.XLAOptions": {
        "short name": "XLAOptions",
        "parameters": {
            "use_spmd_for_xla_partitioning": "True",
            "enable_xla_dynamic_padder": "True"
        }
    },
    "tensorflow.train.BytesList": {
        "short name": "BytesList",
        "parameters": {}
    },
    "tensorflow.train.Checkpoint": {
        "short name": "Checkpoint",
        "parameters": {
            "root": "None",
            "**kwargs": null
        }
    },
    "tensorflow.train.CheckpointManager": {
        "short name": "CheckpointManager",
        "parameters": {
            "checkpoint": null,
            "directory": null,
            "max_to_keep": null,
            "keep_checkpoint_every_n_hours": "None",
            "checkpoint_name": "'ckpt'",
            "step_counter": "None",
            "checkpoint_interval": "None",
            "init_fn": "None"
        }
    },
    "tensorflow.train.CheckpointOptions": {
        "short name": "CheckpointOptions",
        "parameters": {
            "experimental_io_device": "None",
            "experimental_enable_async_checkpoint": "False"
        }
    },
    "tensorflow.train.ClusterDef": {
        "short name": "ClusterDef",
        "parameters": {}
    },
    "tensorflow.train.ClusterSpec": {
        "short name": "ClusterSpec",
        "parameters": {
            "cluster": null
        }
    },
    "tensorflow.train.Coordinator": {
        "short name": "Coordinator",
        "parameters": {
            "clean_stop_exception_types": "None"
        }
    },
    "tensorflow.train.Example": {
        "short name": "Example",
        "parameters": {}
    },
    "tensorflow.train.ExponentialMovingAverage": {
        "short name": "ExponentialMovingAverage",
        "parameters": {
            "decay": null,
            "num_updates": "None",
            "zero_debias": "False",
            "name": "'ExponentialMovingAverage'"
        }
    },
    "tensorflow.train.Feature": {
        "short name": "Feature",
        "parameters": {}
    },
    "tensorflow.train.FeatureList": {
        "short name": "FeatureList",
        "parameters": {}
    },
    "tensorflow.train.FeatureLists": {
        "short name": "FeatureLists",
        "parameters": {}
    },
    "tensorflow.train.Features": {
        "short name": "Features",
        "parameters": {}
    },
    "tensorflow.train.FloatList": {
        "short name": "FloatList",
        "parameters": {}
    },
    "tensorflow.train.Int64List": {
        "short name": "Int64List",
        "parameters": {}
    },
    "tensorflow.train.JobDef": {
        "short name": "JobDef",
        "parameters": {}
    },
    "tensorflow.train.SequenceExample": {
        "short name": "SequenceExample",
        "parameters": {}
    },
    "tensorflow.train.ServerDef": {
        "short name": "ServerDef",
        "parameters": {}
    },
    "tensorflow.autograph.experimental.Feature": {
        "short name": "Feature",
        "parameters": {}
    },
    "tensorflow.compat.v1.AttrValue": {
        "short name": "AttrValue",
        "parameters": {}
    },
    "tensorflow.compat.v1.ConditionalAccumulator": {
        "short name": "ConditionalAccumulator",
        "parameters": {
            "dtype": null,
            "shape": "None",
            "shared_name": "None",
            "name": "'conditional_accumulator'",
            "reduction_type": "'MEAN'"
        }
    },
    "tensorflow.compat.v1.ConditionalAccumulatorBase": {
        "short name": "ConditionalAccumulatorBase",
        "parameters": {
            "dtype": null,
            "shape": null,
            "accumulator_ref": null
        }
    },
    "tensorflow.compat.v1.ConfigProto": {
        "short name": "ConfigProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.DeviceSpec": {
        "short name": "DeviceSpec",
        "parameters": {
            "job": "None",
            "replica": "None",
            "task": "None",
            "device_type": "None",
            "device_index": "None"
        }
    },
    "tensorflow.compat.v1.Dimension": {
        "short name": "Dimension",
        "parameters": {
            "value": null
        }
    },
    "tensorflow.compat.v1.Event": {
        "short name": "Event",
        "parameters": {}
    },
    "tensorflow.compat.v1.FixedLengthRecordReader": {
        "short name": "FixedLengthRecordReader",
        "parameters": {
            "record_bytes": null,
            "header_bytes": "None",
            "footer_bytes": "None",
            "hop_bytes": "None",
            "name": "None",
            "encoding": "None"
        }
    },
    "tensorflow.compat.v1.GPUOptions": {
        "short name": "GPUOptions",
        "parameters": {}
    },
    "tensorflow.compat.v1.GraphDef": {
        "short name": "GraphDef",
        "parameters": {}
    },
    "tensorflow.compat.v1.GraphKeys": {
        "short name": "GraphKeys",
        "parameters": {}
    },
    "tensorflow.compat.v1.GraphOptions": {
        "short name": "GraphOptions",
        "parameters": {}
    },
    "tensorflow.compat.v1.HistogramProto": {
        "short name": "HistogramProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.IdentityReader": {
        "short name": "IdentityReader",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.compat.v1.InteractiveSession": {
        "short name": "InteractiveSession",
        "parameters": {
            "target": "''",
            "graph": "None",
            "config": "None"
        }
    },
    "tensorflow.compat.v1.LMDBReader": {
        "short name": "LMDBReader",
        "parameters": {
            "name": "None",
            "options": "None"
        }
    },
    "tensorflow.compat.v1.LogMessage": {
        "short name": "LogMessage",
        "parameters": {}
    },
    "tensorflow.compat.v1.MetaGraphDef": {
        "short name": "MetaGraphDef",
        "parameters": {}
    },
    "tensorflow.compat.v1.NameAttrList": {
        "short name": "NameAttrList",
        "parameters": {}
    },
    "tensorflow.compat.v1.NodeDef": {
        "short name": "NodeDef",
        "parameters": {}
    },
    "tensorflow.compat.v1.OptimizerOptions": {
        "short name": "OptimizerOptions",
        "parameters": {}
    },
    "tensorflow.compat.v1.ReaderBase": {
        "short name": "ReaderBase",
        "parameters": {
            "reader_ref": null,
            "supports_serialize": "False"
        }
    },
    "tensorflow.compat.v1.RunMetadata": {
        "short name": "RunMetadata",
        "parameters": {}
    },
    "tensorflow.compat.v1.RunOptions": {
        "short name": "RunOptions",
        "parameters": {}
    },
    "tensorflow.compat.v1.Session": {
        "short name": "Session",
        "parameters": {
            "target": "''",
            "graph": "None",
            "config": "None"
        }
    },
    "tensorflow.compat.v1.SessionLog": {
        "short name": "SessionLog",
        "parameters": {}
    },
    "tensorflow.compat.v1.SparseConditionalAccumulator": {
        "short name": "SparseConditionalAccumulator",
        "parameters": {
            "dtype": null,
            "shape": "None",
            "shared_name": "None",
            "name": "'sparse_conditional_accumulator'",
            "reduction_type": "'MEAN'"
        }
    },
    "tensorflow.compat.v1.SparseTensorValue": {
        "short name": "SparseTensorValue",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null
        }
    },
    "tensorflow.compat.v1.Summary": {
        "short name": "Summary",
        "parameters": {}
    },
    "tensorflow.compat.v1.SummaryMetadata": {
        "short name": "SummaryMetadata",
        "parameters": {}
    },
    "tensorflow.compat.v1.TFRecordReader": {
        "short name": "TFRecordReader",
        "parameters": {
            "name": "None",
            "options": "None"
        }
    },
    "tensorflow.compat.v1.TensorInfo": {
        "short name": "TensorInfo",
        "parameters": {}
    },
    "tensorflow.compat.v1.TextLineReader": {
        "short name": "TextLineReader",
        "parameters": {
            "skip_header_lines": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.Variable": {
        "short name": "Variable",
        "parameters": {
            "initial_value": "None",
            "trainable": "None",
            "collections": "None",
            "validate_shape": "True",
            "caching_device": "None",
            "name": "None",
            "variable_def": "None",
            "dtype": "None",
            "expected_shape": "None",
            "import_scope": "None",
            "constraint": "None",
            "use_resource": "None",
            "synchronization": "tf.VariableSynchronization.AUTO",
            "aggregation": "tf.compat.v1.VariableAggregation.NONE",
            "shape": "None"
        }
    },
    "tensorflow.compat.v1.VariableAggregation": {
        "short name": "VariableAggregation",
        "parameters": {}
    },
    "tensorflow.compat.v1.VariableScope": {
        "short name": "VariableScope",
        "parameters": {
            "reuse": null,
            "name": "''",
            "initializer": "None",
            "regularizer": "None",
            "caching_device": "None",
            "partitioner": "None",
            "custom_getter": "None",
            "name_scope": "''",
            "dtype": "tf.dtypes.float32",
            "use_resource": "None",
            "constraint": "None"
        }
    },
    "tensorflow.compat.v1.WholeFileReader": {
        "short name": "WholeFileReader",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Constant": {
        "short name": "Constant",
        "parameters": {
            "value": "0",
            "dtype": "tf.dtypes.float32",
            "verify_shape": "False"
        }
    },
    "tensorflow.compat.v1.keras.initializers.glorot_normal": {
        "short name": "glorot_normal",
        "parameters": {
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": {
        "short name": "glorot_uniform",
        "parameters": {
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.backend.name_scope": {
        "short name": "name_scope",
        "parameters": {
            "name": null,
            "default_name": "None",
            "values": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Ones": {
        "short name": "Ones",
        "parameters": {
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Orthogonal": {
        "short name": "Orthogonal",
        "parameters": {
            "gain": "1.0",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.random_normal_initializer": {
        "short name": "random_normal_initializer",
        "parameters": {
            "mean": "0.0",
            "stddev": "1.0",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.random_uniform_initializer": {
        "short name": "random_uniform_initializer",
        "parameters": {
            "minval": "0.0",
            "maxval": "None",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.truncated_normal_initializer": {
        "short name": "truncated_normal_initializer",
        "parameters": {
            "mean": "0.0",
            "stddev": "1.0",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": {
        "short name": "uniform_unit_scaling_initializer",
        "parameters": {
            "factor": "1.0",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.variable_scope": {
        "short name": "variable_scope",
        "parameters": {
            "name_or_scope": null,
            "default_name": "None",
            "values": "None",
            "initializer": "None",
            "regularizer": "None",
            "caching_device": "None",
            "partitioner": "None",
            "custom_getter": "None",
            "reuse": "None",
            "dtype": "None",
            "use_resource": "None",
            "constraint": "None",
            "auxiliary_name_scope": "True"
        }
    },
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": {
        "short name": "VarianceScaling",
        "parameters": {
            "scale": "1.0",
            "mode": "'fan_in'",
            "distribution": "'truncated_normal'",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Zeros": {
        "short name": "Zeros",
        "parameters": {
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.config.experimental.ClusterDeviceFilters": {
        "short name": "ClusterDeviceFilters",
        "parameters": {}
    },
    "tensorflow.data.experimental.AutoShardPolicy": {
        "short name": "AutoShardPolicy",
        "parameters": {}
    },
    "tensorflow.data.experimental.AutotuneAlgorithm": {
        "short name": "AutotuneAlgorithm",
        "parameters": {}
    },
    "tensorflow.data.experimental.AutotuneOptions": {
        "short name": "AutotuneOptions",
        "parameters": {}
    },
    "tensorflow.data.experimental.CheckpointInputPipelineHook": {
        "short name": "CheckpointInputPipelineHook",
        "parameters": {
            "estimator": null,
            "external_state_policy": "None"
        }
    },
    "tensorflow.data.experimental.CsvDataset": {
        "short name": "CsvDataset",
        "parameters": {
            "filenames": null,
            "record_defaults": null,
            "compression_type": "None",
            "buffer_size": "None",
            "header": "False",
            "field_delim": "','",
            "use_quote_delim": "True",
            "na_value": "''",
            "select_cols": "None",
            "exclude_cols": "None"
        }
    },
    "tensorflow.data.experimental.DatasetInitializer": {
        "short name": "DatasetInitializer",
        "parameters": {
            "dataset": null
        }
    },
    "tensorflow.data.experimental.DistributeOptions": {
        "short name": "DistributeOptions",
        "parameters": {}
    },
    "tensorflow.data.experimental.ExternalStatePolicy": {
        "short name": "ExternalStatePolicy",
        "parameters": {}
    },
    "tensorflow.data.experimental.OptimizationOptions": {
        "short name": "OptimizationOptions",
        "parameters": {}
    },
    "tensorflow.data.experimental.RandomDataset": {
        "short name": "RandomDataset",
        "parameters": {
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.data.experimental.Reducer": {
        "short name": "Reducer",
        "parameters": {
            "init_func": null,
            "reduce_func": null,
            "finalize_func": null
        }
    },
    "tensorflow.data.experimental.SqlDataset": {
        "short name": "SqlDataset",
        "parameters": {
            "driver_name": null,
            "data_source_name": null,
            "query": null,
            "output_types": null
        }
    },
    "tensorflow.data.experimental.TFRecordWriter": {
        "short name": "TFRecordWriter",
        "parameters": {
            "filename": null,
            "compression_type": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.ClusterResolver": {
        "short name": "ClusterResolver",
        "parameters": {}
    },
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": {
        "short name": "GCEClusterResolver",
        "parameters": {
            "project": null,
            "zone": null,
            "instance_group": null,
            "port": null,
            "task_type": "'worker'",
            "task_id": "0",
            "rpc_layer": "'grpc'",
            "credentials": "'default'",
            "service": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": {
        "short name": "KubernetesClusterResolver",
        "parameters": {
            "job_to_label_mapping": "None",
            "tf_server_port": "8470",
            "rpc_layer": "'grpc'",
            "override_client": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": {
        "short name": "SimpleClusterResolver",
        "parameters": {
            "cluster_spec": null,
            "master": "''",
            "task_type": "None",
            "task_id": "None",
            "environment": "''",
            "num_accelerators": "None",
            "rpc_layer": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": {
        "short name": "SlurmClusterResolver",
        "parameters": {
            "jobs": "None",
            "port_base": "8888",
            "gpus_per_node": "None",
            "gpus_per_task": "None",
            "tasks_per_node": "None",
            "auto_set_gpu": "True",
            "rpc_layer": "'grpc'"
        }
    },
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": {
        "short name": "TFConfigClusterResolver",
        "parameters": {
            "task_type": "None",
            "task_id": "None",
            "rpc_layer": "None",
            "environment": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": {
        "short name": "TPUClusterResolver",
        "parameters": {
            "tpu": "None",
            "zone": "None",
            "project": "None",
            "job_name": "'worker'",
            "coordinator_name": "None",
            "coordinator_address": "None",
            "credentials": "'default'",
            "service": "None",
            "discovery_url": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.UnionResolver": {
        "short name": "UnionResolver",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": {
        "short name": "ClusterCoordinator",
        "parameters": {
            "strategy": null
        }
    },
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": {
        "short name": "PerWorkerValues",
        "parameters": {
            "values": null
        }
    },
    "tensorflow.distribute.experimental.coordinator.RemoteValue": {
        "short name": "RemoteValue",
        "parameters": {}
    },
    "tensorflow.distribute.experimental.CentralStorageStrategy": {
        "short name": "CentralStorageStrategy",
        "parameters": {
            "compute_devices": "None",
            "parameter_device": "None"
        }
    },
    "tensorflow.distribute.experimental.CommunicationImplementation": {
        "short name": "CommunicationImplementation",
        "parameters": {}
    },
    "tensorflow.distribute.experimental.CollectiveHints": {
        "short name": "CollectiveHints",
        "parameters": {
            "bytes_per_pack": "0",
            "timeout_seconds": "None"
        }
    },
    "tensorflow.distribute.experimental.CommunicationOptions": {
        "short name": "CommunicationOptions",
        "parameters": {
            "bytes_per_pack": "0",
            "timeout_seconds": "None",
            "implementation": "tf.distribute.experimental.CollectiveCommunication.AUTO"
        }
    },
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": {
        "short name": "MultiWorkerMirroredStrategy",
        "parameters": {
            "communication": "tf.distribute.experimental.CollectiveCommunication.AUTO",
            "cluster_resolver": "None"
        }
    },
    "tensorflow.distribute.experimental.TPUStrategy": {
        "short name": "TPUStrategy",
        "parameters": {
            "tpu_cluster_resolver": "None",
            "device_assignment": "None"
        }
    },
    "tensorflow.distribute.experimental.ValueContext": {
        "short name": "ValueContext",
        "parameters": {
            "replica_id_in_sync_group": "0",
            "num_replicas_in_sync": "1"
        }
    },
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": {
        "short name": "InMemoryEvaluatorHook",
        "parameters": {
            "estimator": null,
            "input_fn": null,
            "steps": "None",
            "hooks": "None",
            "name": "None",
            "every_n_iter": "100"
        }
    },
    "tensorflow.estimator.experimental.LinearSDCA": {
        "short name": "LinearSDCA",
        "parameters": {
            "example_id_column": null,
            "num_loss_partitions": "1",
            "num_table_shards": "None",
            "symmetric_l1_regularization": "0.0",
            "symmetric_l2_regularization": "1.0",
            "adaptive": "False"
        }
    },
    "tensorflow.estimator.experimental.RNNClassifier": {
        "short name": "RNNClassifier",
        "parameters": {
            "sequence_feature_columns": null,
            "context_feature_columns": "None",
            "units": "None",
            "cell_type": "USE_DEFAULT",
            "rnn_cell_fn": "None",
            "return_sequences": "False",
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Adagrad'",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "sequence_mask": "'sequence_mask'",
            "config": "None"
        }
    },
    "tensorflow.estimator.experimental.RNNEstimator": {
        "short name": "RNNEstimator",
        "parameters": {
            "head": null,
            "sequence_feature_columns": null,
            "context_feature_columns": "None",
            "units": "None",
            "cell_type": "USE_DEFAULT",
            "rnn_cell_fn": "None",
            "return_sequences": "False",
            "model_dir": "None",
            "optimizer": "'Adagrad'",
            "config": "None"
        }
    },
    "tensorflow.estimator.export.ClassificationOutput": {
        "short name": "ClassificationOutput",
        "parameters": {
            "scores": "None",
            "classes": "None"
        }
    },
    "tensorflow.estimator.export.EvalOutput": {
        "short name": "EvalOutput",
        "parameters": {
            "loss": "None",
            "predictions": "None",
            "metrics": "None"
        }
    },
    "tensorflow.estimator.export.ExportOutput": {
        "short name": "ExportOutput",
        "parameters": {}
    },
    "tensorflow.estimator.export.PredictOutput": {
        "short name": "PredictOutput",
        "parameters": {
            "outputs": null
        }
    },
    "tensorflow.estimator.export.RegressionOutput": {
        "short name": "RegressionOutput",
        "parameters": {
            "value": null
        }
    },
    "tensorflow.estimator.export.ServingInputReceiver": {
        "short name": "ServingInputReceiver",
        "parameters": {
            "features": null,
            "receiver_tensors": null,
            "receiver_tensors_alternatives": "None"
        }
    },
    "tensorflow.estimator.export.TensorServingInputReceiver": {
        "short name": "TensorServingInputReceiver",
        "parameters": {
            "features": null,
            "receiver_tensors": null,
            "receiver_tensors_alternatives": "None"
        }
    },
    "tensorflow.experimental.dtensor.DTensorCheckpoint": {
        "short name": "DTensorCheckpoint",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.DVariable": {
        "short name": "DVariable",
        "parameters": {
            "initial_value": null,
            "*args": null,
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.experimental.dtensor.Layout": {
        "short name": "Layout",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.Mesh": {
        "short name": "Mesh",
        "parameters": {}
    },
    "tensorflow.experimental.numpy.bool_": {
        "short name": "bool_",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.complex128": {
        "short name": "complex128",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.complex64": {
        "short name": "complex64",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.float16": {
        "short name": "float16",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.float32": {
        "short name": "float32",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.float64": {
        "short name": "float64",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.iinfo": {
        "short name": "iinfo",
        "parameters": {
            "int_type": null
        }
    },
    "tensorflow.experimental.numpy.inexact": {
        "short name": "inexact",
        "parameters": {}
    },
    "tensorflow.experimental.numpy.int16": {
        "short name": "int16",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.int32": {
        "short name": "int32",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.int64": {
        "short name": "int64",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.int8": {
        "short name": "int8",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.object_": {
        "short name": "object_",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.string_": {
        "short name": "string_",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.uint16": {
        "short name": "uint16",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.uint32": {
        "short name": "uint32",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.uint64": {
        "short name": "uint64",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.uint8": {
        "short name": "uint8",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.unicode_": {
        "short name": "unicode_",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.tensorrt.ConversionParams": {
        "short name": "ConversionParams",
        "parameters": {
            "max_workspace_size_bytes": "DEFAULT_TRT_MAX_WORKSPACE_SIZE_BYTES",
            "precision_mode": "TrtPrecisionMode.FP32",
            "minimum_segment_size": "3",
            "maximum_cached_engines": "1",
            "use_calibration": "True",
            "allow_build_at_runtime": "True"
        }
    },
    "tensorflow.experimental.tensorrt.Converter": {
        "short name": "Converter",
        "parameters": {
            "input_saved_model_dir": "None",
            "input_saved_model_tags": "None",
            "input_saved_model_signature_key": "None",
            "use_dynamic_shape": "None",
            "dynamic_shape_profile_strategy": "None",
            "max_workspace_size_bytes": "DEFAULT_TRT_MAX_WORKSPACE_SIZE_BYTES",
            "precision_mode": "TrtPrecisionMode.FP32",
            "minimum_segment_size": "3",
            "maximum_cached_engines": "1",
            "use_calibration": "True",
            "allow_build_at_runtime": "True",
            "conversion_params": "None"
        }
    },
    "tensorflow.io.gfile.GFile": {
        "short name": "GFile",
        "parameters": {
            "name": null,
            "mode": "'r'"
        }
    },
    "tensorflow.keras.callbacks.BackupAndRestore": {
        "short name": "BackupAndRestore",
        "parameters": {
            "backup_dir": null
        }
    },
    "tensorflow.keras.callbacks.BaseLogger": {
        "short name": "BaseLogger",
        "parameters": {
            "stateful_metrics": "None"
        }
    },
    "tensorflow.keras.callbacks.CSVLogger": {
        "short name": "CSVLogger",
        "parameters": {
            "filename": null,
            "separator": "','",
            "append": "False"
        }
    },
    "tensorflow.keras.callbacks.Callback": {
        "short name": "Callback",
        "parameters": {}
    },
    "tensorflow.keras.callbacks.CallbackList": {
        "short name": "CallbackList",
        "parameters": {
            "callbacks": "None",
            "add_history": "False",
            "add_progbar": "False",
            "model": "None",
            "null": "params"
        }
    },
    "tensorflow.keras.callbacks.EarlyStopping": {
        "short name": "EarlyStopping",
        "parameters": {
            "monitor": "'val_loss'",
            "min_delta": "0",
            "patience": "0",
            "verbose": "0",
            "mode": "'auto'",
            "baseline": "None",
            "restore_best_weights": "False"
        }
    },
    "tensorflow.keras.callbacks.History": {
        "short name": "History",
        "parameters": {}
    },
    "tensorflow.keras.callbacks.LambdaCallback": {
        "short name": "LambdaCallback",
        "parameters": {
            "on_epoch_begin": "None",
            "on_epoch_end": "None",
            "on_batch_begin": "None",
            "on_batch_end": "None",
            "on_train_begin": "None",
            "on_train_end": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.callbacks.LearningRateScheduler": {
        "short name": "LearningRateScheduler",
        "parameters": {
            "schedule": null,
            "verbose": "0"
        }
    },
    "tensorflow.keras.callbacks.ModelCheckpoint": {
        "short name": "ModelCheckpoint",
        "parameters": {
            "filepath": null,
            "monitor": "'val_loss'",
            "verbose": "0",
            "save_best_only": "False",
            "save_weights_only": "False",
            "mode": "'auto'",
            "save_freq": "'epoch'",
            "options": "None",
            "initial_value_threshold": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.callbacks.ProgbarLogger": {
        "short name": "ProgbarLogger",
        "parameters": {
            "count_mode": "'samples'",
            "stateful_metrics": "None"
        }
    },
    "tensorflow.keras.callbacks.ReduceLROnPlateau": {
        "short name": "ReduceLROnPlateau",
        "parameters": {
            "monitor": "'val_loss'",
            "factor": "0.1",
            "patience": "10",
            "verbose": "0",
            "mode": "'auto'",
            "min_delta": "0.0001",
            "cooldown": "0",
            "min_lr": "0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.callbacks.RemoteMonitor": {
        "short name": "RemoteMonitor",
        "parameters": {
            "root": "'http://localhost:9000'",
            "path": "'/publish/epoch/end/'",
            "field": "'data'",
            "headers": "None",
            "send_as_json": "False"
        }
    },
    "tensorflow.keras.callbacks.TensorBoard": {
        "short name": "TensorBoard",
        "parameters": {
            "log_dir": "'logs'",
            "histogram_freq": "0",
            "write_graph": "True",
            "write_images": "False",
            "write_steps_per_second": "False",
            "update_freq": "'epoch'",
            "profile_batch": "0",
            "embeddings_freq": "0",
            "embeddings_metadata": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.callbacks.TerminateOnNaN": {
        "short name": "TerminateOnNaN",
        "parameters": {}
    },
    "tensorflow.keras.constraints.Constraint": {
        "short name": "Constraint",
        "parameters": {}
    },
    "tensorflow.keras.constraints.MaxNorm": {
        "short name": "MaxNorm",
        "parameters": {
            "max_value": "2",
            "axis": "0"
        }
    },
    "tensorflow.keras.constraints.MinMaxNorm": {
        "short name": "MinMaxNorm",
        "parameters": {
            "min_value": "0.0",
            "max_value": "1.0",
            "rate": "1.0",
            "axis": "0"
        }
    },
    "tensorflow.keras.constraints.NonNeg": {
        "short name": "NonNeg",
        "parameters": {}
    },
    "tensorflow.keras.constraints.RadialConstraint": {
        "short name": "RadialConstraint",
        "parameters": {}
    },
    "tensorflow.keras.constraints.UnitNorm": {
        "short name": "UnitNorm",
        "parameters": {
            "axis": "0"
        }
    },
    "tensorflow.keras.optimizers.schedules.CosineDecay": {
        "short name": "CosineDecay",
        "parameters": {
            "initial_learning_rate": null,
            "decay_steps": null,
            "alpha": "0.0",
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.CosineDecayRestarts": {
        "short name": "CosineDecayRestarts",
        "parameters": {
            "initial_learning_rate": null,
            "first_decay_steps": null,
            "t_mul": "2.0",
            "m_mul": "1.0",
            "alpha": "0.0",
            "name": "None"
        }
    },
    "tensorflow.keras.experimental.LinearModel": {
        "short name": "LinearModel",
        "parameters": {
            "units": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'zeros'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.experimental.SequenceFeatures": {
        "short name": "SequenceFeatures",
        "parameters": {
            "feature_columns": null,
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.experimental.SidecarEvaluator": {
        "short name": "SidecarEvaluator",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.experimental.WideDeepModel": {
        "short name": "WideDeepModel",
        "parameters": {
            "linear_model": null,
            "dnn_model": null,
            "activation": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.initializers.Constant": {
        "short name": "Constant",
        "parameters": {
            "value": "0"
        }
    },
    "tensorflow.keras.initializers.GlorotNormal": {
        "short name": "GlorotNormal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.GlorotUniform": {
        "short name": "GlorotUniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.HeNormal": {
        "short name": "HeNormal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.HeUniform": {
        "short name": "HeUniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.Identity": {
        "short name": "Identity",
        "parameters": {
            "gain": "1.0"
        }
    },
    "tensorflow.keras.initializers.Initializer": {
        "short name": "Initializer",
        "parameters": {}
    },
    "tensorflow.keras.initializers.LecunNormal": {
        "short name": "LecunNormal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.LecunUniform": {
        "short name": "LecunUniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.Ones": {
        "short name": "Ones",
        "parameters": {}
    },
    "tensorflow.keras.initializers.Orthogonal": {
        "short name": "Orthogonal",
        "parameters": {
            "gain": "1.0",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.RandomNormal": {
        "short name": "RandomNormal",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.RandomUniform": {
        "short name": "RandomUniform",
        "parameters": {
            "minval": "-0.05",
            "maxval": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.TruncatedNormal": {
        "short name": "TruncatedNormal",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.VarianceScaling": {
        "short name": "VarianceScaling",
        "parameters": {
            "scale": "1.0",
            "mode": "'fan_in'",
            "distribution": "'truncated_normal'",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.Zeros": {
        "short name": "Zeros",
        "parameters": {}
    },
    "tensorflow.keras.layers.AbstractRNNCell": {
        "short name": "AbstractRNNCell",
        "parameters": {
            "trainable": "True",
            "name": "None",
            "dtype": "None",
            "dynamic": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Activation": {
        "short name": "Activation",
        "parameters": {
            "activation": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ActivityRegularization": {
        "short name": "ActivityRegularization",
        "parameters": {
            "l1": "0.0",
            "l2": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Add": {
        "short name": "Add",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AdditiveAttention": {
        "short name": "AdditiveAttention",
        "parameters": {
            "use_scale": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AlphaDropout": {
        "short name": "AlphaDropout",
        "parameters": {
            "rate": null,
            "noise_shape": "None",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Attention": {
        "short name": "Attention",
        "parameters": {
            "use_scale": "False",
            "score_mode": "'dot'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Average": {
        "short name": "Average",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AveragePooling1D": {
        "short name": "AveragePooling1D",
        "parameters": {
            "pool_size": "2",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AveragePooling2D": {
        "short name": "AveragePooling2D",
        "parameters": {
            "pool_size": "(2, 2)",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AveragePooling3D": {
        "short name": "AveragePooling3D",
        "parameters": {
            "pool_size": "(2, 2, 2)",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.BatchNormalization": {
        "short name": "BatchNormalization",
        "parameters": {
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "'zeros'",
            "gamma_initializer": "'ones'",
            "moving_mean_initializer": "'zeros'",
            "moving_variance_initializer": "'ones'",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Bidirectional": {
        "short name": "Bidirectional",
        "parameters": {
            "layer": null,
            "merge_mode": "'concat'",
            "weights": "None",
            "backward_layer": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.CategoryEncoding": {
        "short name": "CategoryEncoding",
        "parameters": {
            "num_tokens": "None",
            "output_mode": "'multi_hot'",
            "sparse": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.CenterCrop": {
        "short name": "CenterCrop",
        "parameters": {
            "height": null,
            "width": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Concatenate": {
        "short name": "Concatenate",
        "parameters": {
            "axis": "-1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv1D": {
        "short name": "Conv1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "1",
            "groups": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv1DTranspose": {
        "short name": "Conv1DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "output_padding": "None",
            "data_format": "None",
            "dilation_rate": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv2D": {
        "short name": "Conv2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "groups": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv2DTranspose": {
        "short name": "Conv2DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "output_padding": "None",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv3D": {
        "short name": "Conv3D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1, 1)",
            "groups": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv3DTranspose": {
        "short name": "Conv3DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "output_padding": "None",
            "data_format": "None",
            "dilation_rate": "(1, 1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ConvLSTM1D": {
        "short name": "ConvLSTM1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "1",
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ConvLSTM2D": {
        "short name": "ConvLSTM2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ConvLSTM3D": {
        "short name": "ConvLSTM3D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1, 1)",
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Cropping1D": {
        "short name": "Cropping1D",
        "parameters": {
            "cropping": "(1, 1)",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Cropping2D": {
        "short name": "Cropping2D",
        "parameters": {
            "cropping": "((0, 0), (0, 0))",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Cropping3D": {
        "short name": "Cropping3D",
        "parameters": {
            "cropping": "((1, 1), (1, 1), (1, 1))",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Dense": {
        "short name": "Dense",
        "parameters": {
            "units": null,
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.DenseFeatures": {
        "short name": "DenseFeatures",
        "parameters": {
            "feature_columns": null,
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.DepthwiseConv1D": {
        "short name": "DepthwiseConv1D",
        "parameters": {
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "depth_multiplier": "1",
            "data_format": "None",
            "dilation_rate": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "depthwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.DepthwiseConv2D": {
        "short name": "DepthwiseConv2D",
        "parameters": {
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "depth_multiplier": "1",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "depthwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Discretization": {
        "short name": "Discretization",
        "parameters": {
            "bin_boundaries": "None",
            "num_bins": "None",
            "epsilon": "0.01",
            "output_mode": "'int'",
            "sparse": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Dot": {
        "short name": "Dot",
        "parameters": {
            "axes": null,
            "normalize": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Dropout": {
        "short name": "Dropout",
        "parameters": {
            "rate": null,
            "noise_shape": "None",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ELU": {
        "short name": "ELU",
        "parameters": {
            "alpha": "1.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Embedding": {
        "short name": "Embedding",
        "parameters": {
            "input_dim": null,
            "output_dim": null,
            "embeddings_initializer": "'uniform'",
            "embeddings_regularizer": "None",
            "activity_regularizer": "None",
            "embeddings_constraint": "None",
            "mask_zero": "False",
            "input_length": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Flatten": {
        "short name": "Flatten",
        "parameters": {
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GRU": {
        "short name": "GRU",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "time_major": "False",
            "reset_after": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GRUCell": {
        "short name": "GRUCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "reset_after": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GaussianDropout": {
        "short name": "GaussianDropout",
        "parameters": {
            "rate": null,
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GaussianNoise": {
        "short name": "GaussianNoise",
        "parameters": {
            "stddev": null,
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalAveragePooling1D": {
        "short name": "GlobalAveragePooling1D",
        "parameters": {
            "data_format": "'channels_last'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalAveragePooling2D": {
        "short name": "GlobalAveragePooling2D",
        "parameters": {
            "data_format": "None",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalAveragePooling3D": {
        "short name": "GlobalAveragePooling3D",
        "parameters": {
            "data_format": "None",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalMaxPool1D": {
        "short name": "GlobalMaxPool1D",
        "parameters": {
            "data_format": "'channels_last'",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalMaxPool2D": {
        "short name": "GlobalMaxPool2D",
        "parameters": {
            "data_format": "None",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalMaxPool3D": {
        "short name": "GlobalMaxPool3D",
        "parameters": {
            "data_format": "None",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Hashing": {
        "short name": "Hashing",
        "parameters": {
            "num_bins": null,
            "mask_value": "None",
            "salt": "None",
            "output_mode": "'int'",
            "sparse": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.InputLayer": {
        "short name": "InputLayer",
        "parameters": {
            "input_shape": "None",
            "batch_size": "None",
            "dtype": "None",
            "input_tensor": "None",
            "sparse": "None",
            "name": "None",
            "ragged": "None",
            "type_spec": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.InputSpec": {
        "short name": "InputSpec",
        "parameters": {
            "dtype": "None",
            "shape": "None",
            "ndim": "None",
            "max_ndim": "None",
            "min_ndim": "None",
            "axes": "None",
            "allow_last_axis_squeeze": "False",
            "name": "None"
        }
    },
    "tensorflow.keras.layers.IntegerLookup": {
        "short name": "IntegerLookup",
        "parameters": {
            "max_tokens": "None",
            "num_oov_indices": "1",
            "mask_token": "None",
            "oov_token": "-1",
            "vocabulary": "None",
            "vocabulary_dtype": "'int64'",
            "idf_weights": "None",
            "invert": "False",
            "output_mode": "'int'",
            "sparse": "False",
            "pad_to_max_tokens": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LSTM": {
        "short name": "LSTM",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "time_major": "False",
            "unroll": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LSTMCell": {
        "short name": "LSTMCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Lambda": {
        "short name": "Lambda",
        "parameters": {
            "function": null,
            "output_shape": "None",
            "mask": "None",
            "arguments": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Layer": {
        "short name": "Layer",
        "parameters": {
            "trainable": "True",
            "name": "None",
            "dtype": "None",
            "dynamic": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LayerNormalization": {
        "short name": "LayerNormalization",
        "parameters": {
            "axis": "-1",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "'zeros'",
            "gamma_initializer": "'ones'",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LeakyReLU": {
        "short name": "LeakyReLU",
        "parameters": {
            "alpha": "0.3",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LocallyConnected1D": {
        "short name": "LocallyConnected1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "None",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "implementation": "1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LocallyConnected2D": {
        "short name": "LocallyConnected2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "implementation": "1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Masking": {
        "short name": "Masking",
        "parameters": {
            "mask_value": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.MaxPool1D": {
        "short name": "MaxPool1D",
        "parameters": {
            "pool_size": "2",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.MaxPool2D": {
        "short name": "MaxPool2D",
        "parameters": {
            "pool_size": "(2, 2)",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.MaxPool3D": {
        "short name": "MaxPool3D",
        "parameters": {
            "pool_size": "(2, 2, 2)",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Maximum": {
        "short name": "Maximum",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Minimum": {
        "short name": "Minimum",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.MultiHeadAttention": {
        "short name": "MultiHeadAttention",
        "parameters": {
            "num_heads": null,
            "key_dim": null,
            "value_dim": "None",
            "dropout": "0.0",
            "use_bias": "True",
            "output_shape": "None",
            "attention_axes": "None",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Multiply": {
        "short name": "Multiply",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Normalization": {
        "short name": "Normalization",
        "parameters": {
            "axis": "-1",
            "mean": "None",
            "variance": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.PReLU": {
        "short name": "PReLU",
        "parameters": {
            "alpha_initializer": "'zeros'",
            "alpha_regularizer": "None",
            "alpha_constraint": "None",
            "shared_axes": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Permute": {
        "short name": "Permute",
        "parameters": {
            "dims": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RNN": {
        "short name": "RNN",
        "parameters": {
            "cell": null,
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "time_major": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomBrightness": {
        "short name": "RandomBrightness",
        "parameters": {
            "factor": null,
            "value_range": "(0, 255)",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomContrast": {
        "short name": "RandomContrast",
        "parameters": {
            "factor": null,
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomCrop": {
        "short name": "RandomCrop",
        "parameters": {
            "height": null,
            "width": null,
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomFlip": {
        "short name": "RandomFlip",
        "parameters": {
            "mode": "HORIZONTAL_AND_VERTICAL",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomHeight": {
        "short name": "RandomHeight",
        "parameters": {
            "factor": null,
            "interpolation": "'bilinear'",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomRotation": {
        "short name": "RandomRotation",
        "parameters": {
            "factor": null,
            "fill_mode": "'reflect'",
            "interpolation": "'bilinear'",
            "seed": "None",
            "fill_value": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomTranslation": {
        "short name": "RandomTranslation",
        "parameters": {
            "height_factor": null,
            "width_factor": null,
            "fill_mode": "'reflect'",
            "interpolation": "'bilinear'",
            "seed": "None",
            "fill_value": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomWidth": {
        "short name": "RandomWidth",
        "parameters": {
            "factor": null,
            "interpolation": "'bilinear'",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomZoom": {
        "short name": "RandomZoom",
        "parameters": {
            "height_factor": null,
            "width_factor": "None",
            "fill_mode": "'reflect'",
            "interpolation": "'bilinear'",
            "seed": "None",
            "fill_value": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ReLU": {
        "short name": "ReLU",
        "parameters": {
            "max_value": "None",
            "negative_slope": "0.0",
            "threshold": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RepeatVector": {
        "short name": "RepeatVector",
        "parameters": {
            "n": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Rescaling": {
        "short name": "Rescaling",
        "parameters": {
            "scale": null,
            "offset": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Reshape": {
        "short name": "Reshape",
        "parameters": {
            "target_shape": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Resizing": {
        "short name": "Resizing",
        "parameters": {
            "height": null,
            "width": null,
            "interpolation": "'bilinear'",
            "crop_to_aspect_ratio": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SeparableConv1D": {
        "short name": "SeparableConv1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "1",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "'glorot_uniform'",
            "pointwise_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SeparableConv2D": {
        "short name": "SeparableConv2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "'glorot_uniform'",
            "pointwise_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SimpleRNN": {
        "short name": "SimpleRNN",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SimpleRNNCell": {
        "short name": "SimpleRNNCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Softmax": {
        "short name": "Softmax",
        "parameters": {
            "axis": "-1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SpatialDropout1D": {
        "short name": "SpatialDropout1D",
        "parameters": {
            "rate": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SpatialDropout2D": {
        "short name": "SpatialDropout2D",
        "parameters": {
            "rate": null,
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SpatialDropout3D": {
        "short name": "SpatialDropout3D",
        "parameters": {
            "rate": null,
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.StackedRNNCells": {
        "short name": "StackedRNNCells",
        "parameters": {
            "cells": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.StringLookup": {
        "short name": "StringLookup",
        "parameters": {
            "max_tokens": "None",
            "num_oov_indices": "1",
            "mask_token": "None",
            "oov_token": "'[UNK]'",
            "vocabulary": "None",
            "idf_weights": "None",
            "encoding": "None",
            "invert": "False",
            "output_mode": "'int'",
            "sparse": "False",
            "pad_to_max_tokens": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Subtract": {
        "short name": "Subtract",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.TextVectorization": {
        "short name": "TextVectorization",
        "parameters": {
            "max_tokens": "None",
            "standardize": "'lower_and_strip_punctuation'",
            "split": "'whitespace'",
            "ngrams": "None",
            "output_mode": "'int'",
            "output_sequence_length": "None",
            "pad_to_max_tokens": "False",
            "vocabulary": "None",
            "idf_weights": "None",
            "sparse": "False",
            "ragged": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ThresholdedReLU": {
        "short name": "ThresholdedReLU",
        "parameters": {
            "theta": "1.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.TimeDistributed": {
        "short name": "TimeDistributed",
        "parameters": {
            "layer": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.UnitNormalization": {
        "short name": "UnitNormalization",
        "parameters": {
            "axis": "-1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.UpSampling1D": {
        "short name": "UpSampling1D",
        "parameters": {
            "size": "2",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.UpSampling2D": {
        "short name": "UpSampling2D",
        "parameters": {
            "size": "(2, 2)",
            "data_format": "None",
            "interpolation": "'nearest'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.UpSampling3D": {
        "short name": "UpSampling3D",
        "parameters": {
            "size": "(2, 2, 2)",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Wrapper": {
        "short name": "Wrapper",
        "parameters": {
            "layer": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ZeroPadding1D": {
        "short name": "ZeroPadding1D",
        "parameters": {
            "padding": "1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ZeroPadding2D": {
        "short name": "ZeroPadding2D",
        "parameters": {
            "padding": "(1, 1)",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ZeroPadding3D": {
        "short name": "ZeroPadding3D",
        "parameters": {
            "padding": "(1, 1, 1)",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.losses.BinaryCrossentropy": {
        "short name": "BinaryCrossentropy",
        "parameters": {
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'binary_crossentropy'"
        }
    },
    "tensorflow.keras.losses.BinaryFocalCrossentropy": {
        "short name": "BinaryFocalCrossentropy",
        "parameters": {
            "gamma": "2.0",
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'binary_focal_crossentropy'"
        }
    },
    "tensorflow.keras.losses.CategoricalCrossentropy": {
        "short name": "CategoricalCrossentropy",
        "parameters": {
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'categorical_crossentropy'"
        }
    },
    "tensorflow.keras.losses.CategoricalHinge": {
        "short name": "CategoricalHinge",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'categorical_hinge'"
        }
    },
    "tensorflow.keras.losses.CosineSimilarity": {
        "short name": "CosineSimilarity",
        "parameters": {
            "axis": "-1",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'cosine_similarity'"
        }
    },
    "tensorflow.keras.losses.Hinge": {
        "short name": "Hinge",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'hinge'"
        }
    },
    "tensorflow.keras.losses.Huber": {
        "short name": "Huber",
        "parameters": {
            "delta": "1.0",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'huber_loss'"
        }
    },
    "tensorflow.keras.losses.KLDivergence": {
        "short name": "KLDivergence",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'kl_divergence'"
        }
    },
    "tensorflow.keras.losses.LogCosh": {
        "short name": "LogCosh",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'log_cosh'"
        }
    },
    "tensorflow.keras.losses.Loss": {
        "short name": "Loss",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "None"
        }
    },
    "tensorflow.keras.losses.MeanAbsoluteError": {
        "short name": "MeanAbsoluteError",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'mean_absolute_error'"
        }
    },
    "tensorflow.keras.losses.MeanAbsolutePercentageError": {
        "short name": "MeanAbsolutePercentageError",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'mean_absolute_percentage_error'"
        }
    },
    "tensorflow.keras.losses.MeanSquaredError": {
        "short name": "MeanSquaredError",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'mean_squared_error'"
        }
    },
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": {
        "short name": "MeanSquaredLogarithmicError",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'mean_squared_logarithmic_error'"
        }
    },
    "tensorflow.keras.losses.Poisson": {
        "short name": "Poisson",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'poisson'"
        }
    },
    "tensorflow.keras.losses.Reduction": {
        "short name": "Reduction",
        "parameters": {}
    },
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": {
        "short name": "SparseCategoricalCrossentropy",
        "parameters": {
            "from_logits": "False",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'sparse_categorical_crossentropy'"
        }
    },
    "tensorflow.keras.losses.SquaredHinge": {
        "short name": "SquaredHinge",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'squared_hinge'"
        }
    },
    "tensorflow.keras.metrics.AUC": {
        "short name": "AUC",
        "parameters": {
            "num_thresholds": "200",
            "curve": "'ROC'",
            "summation_method": "'interpolation'",
            "name": "None",
            "dtype": "None",
            "thresholds": "None",
            "multi_label": "False",
            "num_labels": "None",
            "label_weights": "None",
            "from_logits": "False"
        }
    },
    "tensorflow.keras.metrics.Accuracy": {
        "short name": "Accuracy",
        "parameters": {
            "name": "'accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.BinaryAccuracy": {
        "short name": "BinaryAccuracy",
        "parameters": {
            "name": "'binary_accuracy'",
            "dtype": "None",
            "threshold": "0.5"
        }
    },
    "tensorflow.keras.metrics.BinaryCrossentropy": {
        "short name": "BinaryCrossentropy",
        "parameters": {
            "name": "'binary_crossentropy'",
            "dtype": "None",
            "from_logits": "False",
            "label_smoothing": "0"
        }
    },
    "tensorflow.keras.metrics.BinaryIoU": {
        "short name": "BinaryIoU",
        "parameters": {}
    },
    "tensorflow.keras.metrics.CategoricalAccuracy": {
        "short name": "CategoricalAccuracy",
        "parameters": {
            "name": "'categorical_accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.CategoricalCrossentropy": {
        "short name": "CategoricalCrossentropy",
        "parameters": {
            "name": "'categorical_crossentropy'",
            "dtype": "None",
            "from_logits": "False",
            "label_smoothing": "0"
        }
    },
    "tensorflow.keras.metrics.CategoricalHinge": {
        "short name": "CategoricalHinge",
        "parameters": {
            "name": "'categorical_hinge'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.CosineSimilarity": {
        "short name": "CosineSimilarity",
        "parameters": {
            "name": "'cosine_similarity'",
            "dtype": "None",
            "axis": "-1"
        }
    },
    "tensorflow.keras.metrics.FalseNegatives": {
        "short name": "FalseNegatives",
        "parameters": {
            "thresholds": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.FalsePositives": {
        "short name": "FalsePositives",
        "parameters": {
            "thresholds": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Hinge": {
        "short name": "Hinge",
        "parameters": {
            "name": "'hinge'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.IoU": {
        "short name": "IoU",
        "parameters": {}
    },
    "tensorflow.keras.metrics.KLDivergence": {
        "short name": "KLDivergence",
        "parameters": {
            "name": "'kullback_leibler_divergence'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.LogCoshError": {
        "short name": "LogCoshError",
        "parameters": {
            "name": "'logcosh'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Mean": {
        "short name": "Mean",
        "parameters": {
            "name": "'mean'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanAbsoluteError": {
        "short name": "MeanAbsoluteError",
        "parameters": {
            "name": "'mean_absolute_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": {
        "short name": "MeanAbsolutePercentageError",
        "parameters": {
            "name": "'mean_absolute_percentage_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanIoU": {
        "short name": "MeanIoU",
        "parameters": {
            "num_classes": null,
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanMetricWrapper": {
        "short name": "MeanMetricWrapper",
        "parameters": {
            "fn": null,
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.metrics.MeanRelativeError": {
        "short name": "MeanRelativeError",
        "parameters": {
            "normalizer": null,
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanSquaredError": {
        "short name": "MeanSquaredError",
        "parameters": {
            "name": "'mean_squared_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": {
        "short name": "MeanSquaredLogarithmicError",
        "parameters": {
            "name": "'mean_squared_logarithmic_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanTensor": {
        "short name": "MeanTensor",
        "parameters": {
            "name": "'mean_tensor'",
            "dtype": "None",
            "shape": "None"
        }
    },
    "tensorflow.keras.metrics.Metric": {
        "short name": "Metric",
        "parameters": {
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.metrics.OneHotIoU": {
        "short name": "OneHotIoU",
        "parameters": {}
    },
    "tensorflow.keras.metrics.OneHotMeanIoU": {
        "short name": "OneHotMeanIoU",
        "parameters": {}
    },
    "tensorflow.keras.metrics.Poisson": {
        "short name": "Poisson",
        "parameters": {
            "name": "'poisson'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Precision": {
        "short name": "Precision",
        "parameters": {
            "thresholds": "None",
            "top_k": "None",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.PrecisionAtRecall": {
        "short name": "PrecisionAtRecall",
        "parameters": {
            "recall": null,
            "num_thresholds": "200",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Recall": {
        "short name": "Recall",
        "parameters": {
            "thresholds": "None",
            "top_k": "None",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.RecallAtPrecision": {
        "short name": "RecallAtPrecision",
        "parameters": {
            "precision": null,
            "num_thresholds": "200",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.RootMeanSquaredError": {
        "short name": "RootMeanSquaredError",
        "parameters": {
            "name": "'root_mean_squared_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SensitivityAtSpecificity": {
        "short name": "SensitivityAtSpecificity",
        "parameters": {
            "specificity": null,
            "num_thresholds": "200",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": {
        "short name": "SparseCategoricalAccuracy",
        "parameters": {
            "name": "'sparse_categorical_accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": {
        "short name": "SparseCategoricalCrossentropy",
        "parameters": {
            "name": "'sparse_categorical_crossentropy'",
            "dtype": "None",
            "from_logits": "False",
            "axis": "-1"
        }
    },
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": {
        "short name": "SparseTopKCategoricalAccuracy",
        "parameters": {
            "k": "5",
            "name": "'sparse_top_k_categorical_accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SpecificityAtSensitivity": {
        "short name": "SpecificityAtSensitivity",
        "parameters": {
            "sensitivity": null,
            "num_thresholds": "200",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SquaredHinge": {
        "short name": "SquaredHinge",
        "parameters": {
            "name": "'squared_hinge'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Sum": {
        "short name": "Sum",
        "parameters": {
            "name": "'sum'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": {
        "short name": "TopKCategoricalAccuracy",
        "parameters": {
            "k": "5",
            "name": "'top_k_categorical_accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.TrueNegatives": {
        "short name": "TrueNegatives",
        "parameters": {
            "thresholds": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.TruePositives": {
        "short name": "TruePositives",
        "parameters": {
            "thresholds": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": {
        "short name": "LossScaleOptimizer",
        "parameters": {}
    },
    "tensorflow.keras.mixed_precision.Policy": {
        "short name": "Policy",
        "parameters": {
            "name": null
        }
    },
    "tensorflow.keras.optimizers.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-07",
            "name": "'Adadelta'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "learning_rate": "0.001",
            "initial_accumulator_value": "0.1",
            "epsilon": "1e-07",
            "name": "'Adagrad'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Adam": {
        "short name": "Adam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "name": "'Adam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Adamax": {
        "short name": "Adamax",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "name": "'Adamax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Ftrl": {
        "short name": "Ftrl",
        "parameters": {
            "learning_rate": "0.001",
            "learning_rate_power": "-0.5",
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "name": "'Ftrl'",
            "l2_shrinkage_regularization_strength": "0.0",
            "beta": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Nadam": {
        "short name": "Nadam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "name": "'Nadam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "name": null,
            "gradient_aggregator": "None",
            "gradient_transformers": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-07",
            "centered": "False",
            "name": "'RMSprop'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.SGD": {
        "short name": "SGD",
        "parameters": {
            "learning_rate": "0.01",
            "momentum": "0.0",
            "nesterov": "False",
            "name": "'SGD'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.regularizers.L1": {
        "short name": "L1",
        "parameters": {
            "l1": "0.01",
            "**kwargs": null
        }
    },
    "tensorflow.keras.regularizers.L1L2": {
        "short name": "L1L2",
        "parameters": {
            "l1": "0.0",
            "l2": "0.0"
        }
    },
    "tensorflow.keras.regularizers.L2": {
        "short name": "L2",
        "parameters": {
            "l2": "0.01",
            "**kwargs": null
        }
    },
    "tensorflow.keras.regularizers.OrthogonalRegularizer": {
        "short name": "OrthogonalRegularizer",
        "parameters": {
            "factor": "0.01",
            "mode": "'rows'"
        }
    },
    "tensorflow.keras.regularizers.Regularizer": {
        "short name": "Regularizer",
        "parameters": {}
    },
    "tensorflow.keras.utils.custom_object_scope": {
        "short name": "custom_object_scope",
        "parameters": {
            "*args": null
        }
    },
    "tensorflow.keras.utils.GeneratorEnqueuer": {
        "short name": "GeneratorEnqueuer",
        "parameters": {
            "generator": null,
            "use_multiprocessing": "False",
            "random_seed": "None"
        }
    },
    "tensorflow.keras.utils.OrderedEnqueuer": {
        "short name": "OrderedEnqueuer",
        "parameters": {
            "sequence": null,
            "use_multiprocessing": "False",
            "shuffle": "False"
        }
    },
    "tensorflow.keras.utils.Progbar": {
        "short name": "Progbar",
        "parameters": {
            "target": null,
            "width": "30",
            "verbose": "1",
            "interval": "0.05",
            "stateful_metrics": "None",
            "unit_name": "'step'"
        }
    },
    "tensorflow.keras.utils.Sequence": {
        "short name": "Sequence",
        "parameters": {}
    },
    "tensorflow.keras.utils.SequenceEnqueuer": {
        "short name": "SequenceEnqueuer",
        "parameters": {
            "sequence": null,
            "use_multiprocessing": "False"
        }
    },
    "tensorflow.keras.utils.SidecarEvaluator": {
        "short name": "SidecarEvaluator",
        "parameters": {
            "model": null,
            "data": null,
            "checkpoint_dir": null,
            "steps": "None",
            "max_evaluations": "None",
            "callbacks": "None"
        }
    },
    "tensorflow.lite.experimental.Analyzer": {
        "short name": "Analyzer",
        "parameters": {}
    },
    "tensorflow.lite.experimental.OpResolverType": {
        "short name": "OpResolverType",
        "parameters": {}
    },
    "tensorflow.lite.experimental.QuantizationDebugOptions": {
        "short name": "QuantizationDebugOptions",
        "parameters": {
            "layer_debug_metrics": null,
            "model_debug_metrics": null,
            "layer_direct_compare_metrics": null,
            "denylisted_ops": null,
            "denylisted_nodes": null,
            "fully_quantize": false
        }
    },
    "tensorflow.lite.experimental.QuantizationDebugger": {
        "short name": "QuantizationDebugger",
        "parameters": {
            "quant_debug_model_path": null,
            "quant_debug_model_content": null,
            "float_model_path": null,
            "float_model_content": null,
            "debug_dataset": null,
            "debug_options": null,
            "converter": null
        }
    },
    "tensorflow.lookup.experimental.DenseHashTable": {
        "short name": "DenseHashTable",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "default_value": null,
            "empty_key": null,
            "deleted_key": null,
            "initial_num_buckets": "None",
            "name": "'MutableDenseHashTable'",
            "checkpoint": "True",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.lookup.experimental.MutableHashTable": {
        "short name": "MutableHashTable",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "default_value": null,
            "name": "'MutableHashTable'",
            "checkpoint": "True",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.profiler.experimental.Profile": {
        "short name": "Profile",
        "parameters": {
            "logdir": null,
            "options": "None"
        }
    },
    "tensorflow.profiler.experimental.ProfilerOptions": {
        "short name": "ProfilerOptions",
        "parameters": {
            "host_tracer_level": "2",
            "python_tracer_level": "0",
            "device_tracer_level": "1",
            "delay_ms": "None"
        }
    },
    "tensorflow.profiler.experimental.Trace": {
        "short name": "Trace",
        "parameters": {
            "name": null,
            "**kwargs": null
        }
    },
    "tensorflow.saved_model.experimental.TrackableResource": {
        "short name": "TrackableResource",
        "parameters": {
            "device": "''"
        }
    },
    "tensorflow.saved_model.experimental.VariablePolicy": {
        "short name": "VariablePolicy",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.DeviceAssignment": {
        "short name": "DeviceAssignment",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.HardwareFeature": {
        "short name": "HardwareFeature",
        "parameters": {
            "tpu_hardware_feature_proto": null
        }
    },
    "tensorflow.tpu.experimental.TPUSystemMetadata": {
        "short name": "TPUSystemMetadata",
        "parameters": {
            "num_cores": null,
            "num_hosts": null,
            "num_of_cores_per_host": null,
            "topology": null,
            "devices": null
        }
    },
    "tensorflow.tpu.experimental.Topology": {
        "short name": "Topology",
        "parameters": {
            "serialized": "None",
            "mesh_shape": "None",
            "device_coordinates": "None"
        }
    },
    "tensorflow.train.experimental.PythonState": {
        "short name": "PythonState",
        "parameters": {}
    },
    "tensorflow.types.experimental.Callable": {
        "short name": "Callable",
        "parameters": {}
    },
    "tensorflow.types.experimental.ConcreteFunction": {
        "short name": "ConcreteFunction",
        "parameters": {}
    },
    "tensorflow.types.experimental.GenericFunction": {
        "short name": "GenericFunction",
        "parameters": {}
    },
    "tensorflow.types.experimental.SupportsTracingProtocol": {
        "short name": "SupportsTracingProtocol",
        "parameters": {}
    },
    "tensorflow.types.experimental.TraceType": {
        "short name": "TraceType",
        "parameters": {}
    },
    "tensorflow.types.experimental.TracingContext": {
        "short name": "TracingContext",
        "parameters": {}
    },
    "tensorflow.compat.v1.data.Dataset": {
        "short name": "Dataset",
        "parameters": {}
    },
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": {
        "short name": "FixedLengthRecordDataset",
        "parameters": {
            "filenames": null,
            "record_bytes": null,
            "header_bytes": "None",
            "footer_bytes": "None",
            "buffer_size": "None",
            "compression_type": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.data.Iterator": {
        "short name": "Iterator",
        "parameters": {
            "iterator_resource": null,
            "initializer": null,
            "output_types": null,
            "output_shapes": null,
            "output_classes": null
        }
    },
    "tensorflow.compat.v1.data.TFRecordDataset": {
        "short name": "TFRecordDataset",
        "parameters": {
            "filenames": null,
            "compression_type": "None",
            "buffer_size": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.data.TextLineDataset": {
        "short name": "TextLineDataset",
        "parameters": {
            "filenames": null,
            "compression_type": "None",
            "buffer_size": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.distribute.MirroredStrategy": {
        "short name": "MirroredStrategy",
        "parameters": {
            "devices": "None",
            "cross_device_ops": "None"
        }
    },
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": {
        "short name": "OneDeviceStrategy",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.compat.v1.distribute.ReplicaContext": {
        "short name": "ReplicaContext",
        "parameters": {
            "strategy": null,
            "replica_id_in_sync_group": null
        }
    },
    "tensorflow.compat.v1.distribute.Strategy": {
        "short name": "Strategy",
        "parameters": {
            "extended": null
        }
    },
    "tensorflow.compat.v1.distribute.StrategyExtended": {
        "short name": "StrategyExtended",
        "parameters": {
            "container_strategy": null
        }
    },
    "tensorflow.compat.v1.distributions.Bernoulli": {
        "short name": "Bernoulli",
        "parameters": {
            "logits": "None",
            "probs": "None",
            "dtype": "tf.dtypes.int32",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Bernoulli'"
        }
    },
    "tensorflow.compat.v1.distributions.Beta": {
        "short name": "Beta",
        "parameters": {
            "concentration1": "None",
            "concentration0": "None",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Beta'"
        }
    },
    "tensorflow.compat.v1.distributions.Categorical": {
        "short name": "Categorical",
        "parameters": {
            "logits": "None",
            "probs": "None",
            "dtype": "tf.dtypes.int32",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Categorical'"
        }
    },
    "tensorflow.compat.v1.distributions.Dirichlet": {
        "short name": "Dirichlet",
        "parameters": {
            "concentration": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Dirichlet'"
        }
    },
    "tensorflow.compat.v1.distributions.DirichletMultinomial": {
        "short name": "DirichletMultinomial",
        "parameters": {
            "total_count": null,
            "concentration": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'DirichletMultinomial'"
        }
    },
    "tensorflow.compat.v1.distributions.Distribution": {
        "short name": "Distribution",
        "parameters": {
            "dtype": null,
            "reparameterization_type": null,
            "validate_args": null,
            "allow_nan_stats": null,
            "parameters": "None",
            "graph_parents": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.distributions.Exponential": {
        "short name": "Exponential",
        "parameters": {
            "rate": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Exponential'"
        }
    },
    "tensorflow.compat.v1.distributions.Gamma": {
        "short name": "Gamma",
        "parameters": {
            "concentration": null,
            "rate": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Gamma'"
        }
    },
    "tensorflow.compat.v1.distributions.Laplace": {
        "short name": "Laplace",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Laplace'"
        }
    },
    "tensorflow.compat.v1.distributions.Multinomial": {
        "short name": "Multinomial",
        "parameters": {
            "total_count": null,
            "logits": "None",
            "probs": "None",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Multinomial'"
        }
    },
    "tensorflow.compat.v1.distributions.Normal": {
        "short name": "Normal",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Normal'"
        }
    },
    "tensorflow.compat.v1.distributions.RegisterKL": {
        "short name": "RegisterKL",
        "parameters": {
            "dist_cls_a": null,
            "dist_cls_b": null
        }
    },
    "tensorflow.compat.v1.distributions.ReparameterizationType": {
        "short name": "ReparameterizationType",
        "parameters": {
            "rep_type": null
        }
    },
    "tensorflow.compat.v1.distributions.StudentT": {
        "short name": "StudentT",
        "parameters": {
            "df": null,
            "loc": null,
            "scale": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'StudentT'"
        }
    },
    "tensorflow.compat.v1.distributions.Uniform": {
        "short name": "Uniform",
        "parameters": {
            "low": "0.0",
            "high": "1.0",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Uniform'"
        }
    },
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": {
        "short name": "raise_exception_on_not_ok_status",
        "parameters": {}
    },
    "tensorflow.compat.v1.estimator.BaselineClassifier": {
        "short name": "BaselineClassifier",
        "parameters": {
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM"
        }
    },
    "tensorflow.compat.v1.estimator.BaselineEstimator": {
        "short name": "BaselineEstimator",
        "parameters": {
            "head": null,
            "model_dir": "None",
            "optimizer": "'Ftrl'",
            "config": "None"
        }
    },
    "tensorflow.compat.v1.estimator.BaselineRegressor": {
        "short name": "BaselineRegressor",
        "parameters": {
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM"
        }
    },
    "tensorflow.compat.v1.estimator.DNNClassifier": {
        "short name": "DNNClassifier",
        "parameters": {
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "batch_norm": "False"
        }
    },
    "tensorflow.compat.v1.estimator.DNNEstimator": {
        "short name": "DNNEstimator",
        "parameters": {
            "head": null,
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "batch_norm": "False"
        }
    },
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": {
        "short name": "DNNLinearCombinedClassifier",
        "parameters": {
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": {
        "short name": "DNNLinearCombinedEstimator",
        "parameters": {
            "head": null,
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": {
        "short name": "DNNLinearCombinedRegressor",
        "parameters": {
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.DNNRegressor": {
        "short name": "DNNRegressor",
        "parameters": {
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "batch_norm": "False"
        }
    },
    "tensorflow.compat.v1.estimator.Estimator": {
        "short name": "Estimator",
        "parameters": {
            "model_fn": null,
            "model_dir": "None",
            "config": "None",
            "params": "None",
            "warm_start_from": "None"
        }
    },
    "tensorflow.compat.v1.estimator.LinearClassifier": {
        "short name": "LinearClassifier",
        "parameters": {
            "feature_columns": null,
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "partitioner": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.LinearEstimator": {
        "short name": "LinearEstimator",
        "parameters": {
            "head": null,
            "feature_columns": null,
            "model_dir": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "partitioner": "None",
            "sparse_combiner": "'sum'",
            "warm_start_from": "None"
        }
    },
    "tensorflow.compat.v1.estimator.LinearRegressor": {
        "short name": "LinearRegressor",
        "parameters": {
            "feature_columns": null,
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "partitioner": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.flags.ArgumentParser": {
        "short name": "ArgumentParser",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.ArgumentSerializer": {
        "short name": "ArgumentSerializer",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.BaseListParser": {
        "short name": "BaseListParser",
        "parameters": {
            "token": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.flags.BooleanFlag": {
        "short name": "BooleanFlag",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "short_name": "None",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.BooleanParser": {
        "short name": "BooleanParser",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": {
        "short name": "CantOpenFlagFileError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.CsvListSerializer": {
        "short name": "CsvListSerializer",
        "parameters": {
            "list_sep": null
        }
    },
    "tensorflow.compat.v1.flags.DuplicateFlagError": {
        "short name": "DuplicateFlagError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.EnumClassFlag": {
        "short name": "EnumClassFlag",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "enum_class": null,
            "short_name": "None",
            "case_sensitive": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.EnumClassListSerializer": {
        "short name": "EnumClassListSerializer",
        "parameters": {
            "list_sep": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.flags.EnumClassParser": {
        "short name": "EnumClassParser",
        "parameters": {
            "enum_class": null,
            "case_sensitive": "True"
        }
    },
    "tensorflow.compat.v1.flags.EnumClassSerializer": {
        "short name": "EnumClassSerializer",
        "parameters": {
            "lowercase": null
        }
    },
    "tensorflow.compat.v1.flags.EnumFlag": {
        "short name": "EnumFlag",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "enum_values": null,
            "short_name": "None",
            "case_sensitive": "True",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.EnumParser": {
        "short name": "EnumParser",
        "parameters": {
            "enum_values": null,
            "case_sensitive": "True"
        }
    },
    "tensorflow.compat.v1.flags.Error": {
        "short name": "Error",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.Flag": {
        "short name": "Flag",
        "parameters": {
            "parser": null,
            "serializer": null,
            "name": null,
            "default": null,
            "help_string": null,
            "short_name": "None",
            "boolean": "False",
            "allow_override": "False",
            "allow_override_cpp": "False",
            "allow_hide_cpp": "False",
            "allow_overwrite": "True",
            "allow_using_method_names": "False"
        }
    },
    "tensorflow.compat.v1.flags.FlagHolder": {
        "short name": "FlagHolder",
        "parameters": {
            "flag_values": null,
            "flag": null,
            "ensure_non_none_value": "False"
        }
    },
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": {
        "short name": "FlagNameConflictsWithMethodError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.FlagValues": {
        "short name": "FlagValues",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.FloatParser": {
        "short name": "FloatParser",
        "parameters": {
            "lower_bound": "None",
            "upper_bound": "None"
        }
    },
    "tensorflow.compat.v1.flags.IllegalFlagValueError": {
        "short name": "IllegalFlagValueError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.IntegerParser": {
        "short name": "IntegerParser",
        "parameters": {
            "lower_bound": "None",
            "upper_bound": "None"
        }
    },
    "tensorflow.compat.v1.flags.ListParser": {
        "short name": "ListParser",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.ListSerializer": {
        "short name": "ListSerializer",
        "parameters": {
            "list_sep": null
        }
    },
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": {
        "short name": "MultiEnumClassFlag",
        "parameters": {
            "name": null,
            "default": null,
            "help_string": null,
            "enum_class": null,
            "case_sensitive": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.MultiFlag": {
        "short name": "MultiFlag",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": {
        "short name": "UnparsedFlagAccessError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": {
        "short name": "UnrecognizedFlagError",
        "parameters": {
            "flagname": null,
            "flagvalue": "''",
            "suggestions": "None"
        }
    },
    "tensorflow.compat.v1.flags.ValidationError": {
        "short name": "ValidationError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": {
        "short name": "WhitespaceSeparatedListParser",
        "parameters": {
            "comma_compat": "False"
        }
    },
    "tensorflow.compat.v1.gfile.FastGFile": {
        "short name": "FastGFile",
        "parameters": {
            "name": null,
            "mode": "'r'"
        }
    },
    "tensorflow.compat.v1.image.ResizeMethod": {
        "short name": "ResizeMethod",
        "parameters": {}
    },
    "tensorflow.compat.v1.keras.initializers.Identity": {
        "short name": "Identity",
        "parameters": {
            "gain": "1.0",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.io.TFRecordCompressionType": {
        "short name": "TFRecordCompressionType",
        "parameters": {}
    },
    "tensorflow.compat.v1.layers.AveragePooling1D": {
        "short name": "AveragePooling1D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.AveragePooling2D": {
        "short name": "AveragePooling2D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.AveragePooling3D": {
        "short name": "AveragePooling3D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.BatchNormalization": {
        "short name": "BatchNormalization",
        "parameters": {
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "tf.compat.v1.zeros_initializer()",
            "gamma_initializer": "tf.compat.v1.ones_initializer()",
            "moving_mean_initializer": "tf.compat.v1.zeros_initializer()",
            "moving_variance_initializer": "tf.compat.v1.ones_initializer()",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "renorm": "False",
            "renorm_clipping": "None",
            "renorm_momentum": "0.99",
            "fused": "None",
            "trainable": "True",
            "virtual_batch_size": "None",
            "adjustment": "None",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv1D": {
        "short name": "Conv1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv2D": {
        "short name": "Conv2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv2DTranspose": {
        "short name": "Conv2DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv3D": {
        "short name": "Conv3D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv3DTranspose": {
        "short name": "Conv3DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Dense": {
        "short name": "Dense",
        "parameters": {
            "units": null,
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Dropout": {
        "short name": "Dropout",
        "parameters": {
            "rate": "0.5",
            "noise_shape": "None",
            "seed": "None",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Flatten": {
        "short name": "Flatten",
        "parameters": {
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Layer": {
        "short name": "Layer",
        "parameters": {
            "trainable": "True",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.MaxPooling1D": {
        "short name": "MaxPooling1D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.MaxPooling2D": {
        "short name": "MaxPooling2D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.MaxPooling3D": {
        "short name": "MaxPooling3D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.SeparableConv1D": {
        "short name": "SeparableConv1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "1",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "None",
            "pointwise_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.SeparableConv2D": {
        "short name": "SeparableConv2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1)",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "None",
            "pointwise_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.lite.OpHint": {
        "short name": "OpHint",
        "parameters": {
            "function_name": null,
            "level": "1",
            "children_inputs_mappings": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.lite.TFLiteConverter": {
        "short name": "TFLiteConverter",
        "parameters": {
            "graph_def": null,
            "input_tensors": null,
            "output_tensors": null,
            "input_arrays_with_shape": "None",
            "output_arrays": "None",
            "experimental_debug_info_func": "None"
        }
    },
    "tensorflow.compat.v1.lite.TocoConverter": {
        "short name": "TocoConverter",
        "parameters": {}
    },
    "tensorflow.compat.v1.lookup.StaticHashTable": {
        "short name": "StaticHashTable",
        "parameters": {
            "initializer": null,
            "default_value": null,
            "name": "None",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": {
        "short name": "StaticVocabularyTable",
        "parameters": {
            "initializer": null,
            "num_oov_buckets": null,
            "lookup_key_dtype": "None",
            "name": "None",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.compat.v1.losses.Reduction": {
        "short name": "Reduction",
        "parameters": {}
    },
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": {
        "short name": "DynamicLossScale",
        "parameters": {
            "initial_loss_scale": "2 ** 15",
            "increment_period": "2000",
            "multiplier": "2.0"
        }
    },
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": {
        "short name": "FixedLossScale",
        "parameters": {
            "loss_scale_value": null
        }
    },
    "tensorflow.compat.v1.mixed_precision.LossScale": {
        "short name": "LossScale",
        "parameters": {}
    },
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": {
        "short name": "MixedPrecisionLossScaleOptimizer",
        "parameters": {
            "opt": null,
            "loss_scale": null
        }
    },
    "tensorflow.compat.v1.profiler.AdviceProto": {
        "short name": "AdviceProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.profiler.GraphNodeProto": {
        "short name": "GraphNodeProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": {
        "short name": "MultiGraphNodeProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.profiler.OpLogProto": {
        "short name": "OpLogProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": {
        "short name": "ProfileOptionBuilder",
        "parameters": {
            "options": "None"
        }
    },
    "tensorflow.compat.v1.profiler.Profiler": {
        "short name": "Profiler",
        "parameters": {
            "graph": "None",
            "op_log": "None"
        }
    },
    "tensorflow.compat.v1.ragged.RaggedTensorValue": {
        "short name": "RaggedTensorValue",
        "parameters": {
            "values": null,
            "row_splits": null
        }
    },
    "tensorflow.compat.v1.saved_model.Builder": {
        "short name": "Builder",
        "parameters": {
            "export_dir": null
        }
    },
    "tensorflow.compat.v1.summary.FileWriter": {
        "short name": "FileWriter",
        "parameters": {
            "logdir": null,
            "graph": "None",
            "max_queue": "10",
            "flush_secs": "120",
            "graph_def": "None",
            "filename_suffix": "None",
            "session": "None"
        }
    },
    "tensorflow.compat.v1.summary.FileWriterCache": {
        "short name": "FileWriterCache",
        "parameters": {}
    },
    "tensorflow.compat.v1.summary.SummaryDescription": {
        "short name": "SummaryDescription",
        "parameters": {}
    },
    "tensorflow.compat.v1.summary.TaggedRunMetadata": {
        "short name": "TaggedRunMetadata",
        "parameters": {}
    },
    "tensorflow.compat.v1.test.StubOutForTesting": {
        "short name": "StubOutForTesting",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": {
        "short name": "CrossShardOptimizer",
        "parameters": {
            "opt": null,
            "reduction": "losses.Reduction.MEAN",
            "name": "'CrossShardOptimizer'",
            "group_assignment": "None"
        }
    },
    "tensorflow.compat.v1.tpu.PaddingSpec": {
        "short name": "PaddingSpec",
        "parameters": {}
    },
    "tensorflow.compat.v1.train.AdadeltaOptimizer": {
        "short name": "AdadeltaOptimizer",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-08",
            "use_locking": "False",
            "name": "'Adadelta'"
        }
    },
    "tensorflow.compat.v1.train.AdagradDAOptimizer": {
        "short name": "AdagradDAOptimizer",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "initial_gradient_squared_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "use_locking": "False",
            "name": "'AdagradDA'"
        }
    },
    "tensorflow.compat.v1.train.AdagradOptimizer": {
        "short name": "AdagradOptimizer",
        "parameters": {
            "learning_rate": null,
            "initial_accumulator_value": "0.1",
            "use_locking": "False",
            "name": "'Adagrad'"
        }
    },
    "tensorflow.compat.v1.train.AdamOptimizer": {
        "short name": "AdamOptimizer",
        "parameters": {
            "learning_rate": "0.001",
            "beta1": "0.9",
            "beta2": "0.999",
            "epsilon": "1e-08",
            "use_locking": "False",
            "name": "'Adam'"
        }
    },
    "tensorflow.compat.v1.train.Checkpoint": {
        "short name": "Checkpoint",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.train.ChiefSessionCreator": {
        "short name": "ChiefSessionCreator",
        "parameters": {
            "scaffold": "None",
            "master": "''",
            "config": "None",
            "checkpoint_dir": "None",
            "checkpoint_filename_with_path": "None"
        }
    },
    "tensorflow.compat.v1.train.FtrlOptimizer": {
        "short name": "FtrlOptimizer",
        "parameters": {
            "learning_rate": null,
            "learning_rate_power": "-0.5",
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "use_locking": "False",
            "name": "'Ftrl'",
            "accum_name": "None",
            "linear_name": "None",
            "l2_shrinkage_regularization_strength": "0.0",
            "beta": "None"
        }
    },
    "tensorflow.compat.v1.train.GradientDescentOptimizer": {
        "short name": "GradientDescentOptimizer",
        "parameters": {
            "learning_rate": null,
            "use_locking": "False",
            "name": "'GradientDescent'"
        }
    },
    "tensorflow.compat.v1.train.LooperThread": {
        "short name": "LooperThread",
        "parameters": {
            "coord": null,
            "timer_interval_secs": null,
            "target": "None",
            "args": "None",
            "kwargs": "None"
        }
    },
    "tensorflow.compat.v1.train.MomentumOptimizer": {
        "short name": "MomentumOptimizer",
        "parameters": {
            "learning_rate": null,
            "momentum": null,
            "use_locking": "False",
            "name": "'Momentum'",
            "use_nesterov": "False"
        }
    },
    "tensorflow.compat.v1.train.MonitoredSession": {
        "short name": "MonitoredSession",
        "parameters": {
            "session_creator": "None",
            "hooks": "None",
            "stop_grace_period_secs": "120"
        }
    },
    "tensorflow.compat.v1.train.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "use_locking": null,
            "name": null
        }
    },
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": {
        "short name": "ProximalAdagradOptimizer",
        "parameters": {
            "learning_rate": null,
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "use_locking": "False",
            "name": "'ProximalAdagrad'"
        }
    },
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": {
        "short name": "ProximalGradientDescentOptimizer",
        "parameters": {
            "learning_rate": null,
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "use_locking": "False",
            "name": "'ProximalGradientDescent'"
        }
    },
    "tensorflow.compat.v1.train.QueueRunner": {
        "short name": "QueueRunner",
        "parameters": {
            "queue": "None",
            "enqueue_ops": "None",
            "close_op": "None",
            "cancel_op": "None",
            "queue_closed_exception_types": "None",
            "queue_runner_def": "None",
            "import_scope": "None"
        }
    },
    "tensorflow.compat.v1.train.RMSPropOptimizer": {
        "short name": "RMSPropOptimizer",
        "parameters": {
            "learning_rate": null,
            "decay": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-10",
            "use_locking": "False",
            "centered": "False",
            "name": "'RMSProp'"
        }
    },
    "tensorflow.compat.v1.train.Saver": {
        "short name": "Saver",
        "parameters": {
            "var_list": "None",
            "reshape": "False",
            "sharded": "False",
            "max_to_keep": "5",
            "keep_checkpoint_every_n_hours": "10000.0",
            "name": "None",
            "restore_sequentially": "False",
            "saver_def": "None",
            "builder": "None",
            "defer_build": "False",
            "allow_empty": "False",
            "write_version": "saver_pb2.SaverDef.V2",
            "pad_step_number": "False",
            "save_relative_paths": "False",
            "filename": "None"
        }
    },
    "tensorflow.compat.v1.train.SaverDef": {
        "short name": "SaverDef",
        "parameters": {}
    },
    "tensorflow.compat.v1.train.Scaffold": {
        "short name": "Scaffold",
        "parameters": {
            "init_op": "None",
            "init_feed_dict": "None",
            "init_fn": "None",
            "ready_op": "None",
            "ready_for_local_init_op": "None",
            "local_init_op": "None",
            "summary_op": "None",
            "saver": "None",
            "copy_from_scaffold": "None",
            "local_init_feed_dict": "None"
        }
    },
    "tensorflow.compat.v1.train.SessionCreator": {
        "short name": "SessionCreator",
        "parameters": {}
    },
    "tensorflow.compat.v1.train.SessionManager": {
        "short name": "SessionManager",
        "parameters": {
            "local_init_op": "None",
            "ready_op": "None",
            "ready_for_local_init_op": "None",
            "graph": "None",
            "recovery_wait_secs": "30",
            "local_init_run_options": "None",
            "local_init_feed_dict": "None"
        }
    },
    "tensorflow.compat.v1.train.SingularMonitoredSession": {
        "short name": "SingularMonitoredSession",
        "parameters": {
            "hooks": "None",
            "scaffold": "None",
            "master": "''",
            "config": "None",
            "checkpoint_dir": "None",
            "stop_grace_period_secs": "120",
            "checkpoint_filename_with_path": "None"
        }
    },
    "tensorflow.compat.v1.train.Supervisor": {
        "short name": "Supervisor",
        "parameters": {
            "graph": "None",
            "ready_op": "USE_DEFAULT",
            "ready_for_local_init_op": "USE_DEFAULT",
            "is_chief": "True",
            "init_op": "USE_DEFAULT",
            "init_feed_dict": "None",
            "local_init_op": "USE_DEFAULT",
            "logdir": "None",
            "summary_op": "USE_DEFAULT",
            "saver": "USE_DEFAULT",
            "global_step": "USE_DEFAULT",
            "save_summaries_secs": "120",
            "save_model_secs": "600",
            "recovery_wait_secs": "30",
            "stop_grace_secs": "120",
            "checkpoint_basename": "'model.ckpt'",
            "session_manager": "None",
            "summary_writer": "USE_DEFAULT",
            "init_fn": "None",
            "local_init_run_options": "None"
        }
    },
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": {
        "short name": "SyncReplicasOptimizer",
        "parameters": {
            "opt": null,
            "replicas_to_aggregate": null,
            "total_num_replicas": "None",
            "variable_averages": "None",
            "variables_to_average": "None",
            "use_locking": "False",
            "name": "'sync_replicas'"
        }
    },
    "tensorflow.compat.v1.train.WorkerSessionCreator": {
        "short name": "WorkerSessionCreator",
        "parameters": {
            "scaffold": "None",
            "master": "''",
            "config": "None",
            "max_wait_secs": "30 * 60"
        }
    },
    "tensorflow.data.experimental.service.DispatchServer": {
        "short name": "DispatchServer",
        "parameters": {
            "config": "None",
            "start": "True"
        }
    },
    "tensorflow.data.experimental.service.DispatcherConfig": {
        "short name": "DispatcherConfig",
        "parameters": {
            "port": "0",
            "protocol": "None",
            "work_dir": "None",
            "fault_tolerant_mode": "False",
            "worker_addresses": "None",
            "job_gc_check_interval_ms": "None",
            "job_gc_timeout_ms": "None"
        }
    },
    "tensorflow.data.experimental.service.ShardingPolicy": {
        "short name": "ShardingPolicy",
        "parameters": {}
    },
    "tensorflow.data.experimental.service.WorkerConfig": {
        "short name": "WorkerConfig",
        "parameters": {
            "dispatcher_address": null,
            "worker_address": "None",
            "port": "0",
            "protocol": "None",
            "heartbeat_interval_ms": "None",
            "dispatcher_timeout_ms": "None"
        }
    },
    "tensorflow.data.experimental.service.WorkerServer": {
        "short name": "WorkerServer",
        "parameters": {
            "config": null,
            "start": "True"
        }
    },
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": {
        "short name": "FixedShardsPartitioner",
        "parameters": {
            "num_shards": null
        }
    },
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": {
        "short name": "MaxSizePartitioner",
        "parameters": {
            "max_shard_bytes": null,
            "max_shards": "None",
            "bytes_per_string": "16"
        }
    },
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": {
        "short name": "MinSizePartitioner",
        "parameters": {
            "min_shard_bytes": "256 << 10",
            "max_shards": "1",
            "bytes_per_string": "16"
        }
    },
    "tensorflow.distribute.experimental.partitioners.Partitioner": {
        "short name": "Partitioner",
        "parameters": {}
    },
    "tensorflow.distribute.experimental.rpc.Client": {
        "short name": "Client",
        "parameters": {}
    },
    "tensorflow.distribute.experimental.rpc.Server": {
        "short name": "Server",
        "parameters": {}
    },
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": {
        "short name": "BackupAndRestore",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.dtensor.experimental.LayoutMap": {
        "short name": "LayoutMap",
        "parameters": {
            "mesh": "None"
        }
    },
    "tensorflow.keras.layers.experimental.EinsumDense": {
        "short name": "EinsumDense",
        "parameters": {
            "equation": null,
            "output_shape": null,
            "activation": "None",
            "bias_axes": "None",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": {
        "short name": "RandomFourierFeatures",
        "parameters": {
            "output_dim": null,
            "kernel_initializer": "'gaussian'",
            "scale": "None",
            "trainable": "False",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": {
        "short name": "SyncBatchNormalization",
        "parameters": {
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "'zeros'",
            "gamma_initializer": "'ones'",
            "moving_mean_initializer": "'zeros'",
            "moving_variance_initializer": "'ones'",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-07",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Adadelta'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "learning_rate": "0.001",
            "initial_accumulator_value": "0.1",
            "epsilon": "1e-07",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Adagrad'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Adam": {
        "short name": "Adam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Adam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.AdamW": {
        "short name": "AdamW",
        "parameters": {
            "learning_rate": "0.001",
            "weight_decay": "0.004",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'AdamW'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Adamax": {
        "short name": "Adamax",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Adamax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Ftrl": {
        "short name": "Ftrl",
        "parameters": {
            "learning_rate": "0.001",
            "learning_rate_power": "-0.5",
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "l2_shrinkage_regularization_strength": "0.0",
            "beta": "0.0",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Ftrl'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Nadam": {
        "short name": "Nadam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Nadam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "name": null,
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-07",
            "centered": "False",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "100",
            "jit_compile": "True",
            "name": "'RMSprop'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.SGD": {
        "short name": "SGD",
        "parameters": {
            "learning_rate": "0.01",
            "momentum": "0.0",
            "nesterov": "False",
            "amsgrad": "False",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'SGD'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-07",
            "name": "'Adadelta'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "learning_rate": "0.001",
            "initial_accumulator_value": "0.1",
            "epsilon": "1e-07",
            "name": "'Adagrad'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Adam": {
        "short name": "Adam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "name": "'Adam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Adamax": {
        "short name": "Adamax",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "name": "'Adamax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Ftrl": {
        "short name": "Ftrl",
        "parameters": {
            "learning_rate": "0.001",
            "learning_rate_power": "-0.5",
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "name": "'Ftrl'",
            "l2_shrinkage_regularization_strength": "0.0",
            "beta": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Nadam": {
        "short name": "Nadam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "name": "'Nadam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "name": null,
            "gradient_aggregator": "None",
            "gradient_transformers": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-07",
            "centered": "False",
            "name": "'RMSprop'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.SGD": {
        "short name": "SGD",
        "parameters": {
            "learning_rate": "0.01",
            "momentum": "0.0",
            "nesterov": "False",
            "name": "'SGD'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": {
        "short name": "ExponentialDecay",
        "parameters": {
            "initial_learning_rate": null,
            "decay_steps": null,
            "decay_rate": null,
            "staircase": "False",
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": {
        "short name": "InverseTimeDecay",
        "parameters": {
            "initial_learning_rate": null,
            "decay_steps": null,
            "decay_rate": null,
            "staircase": "False",
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": {
        "short name": "LearningRateSchedule",
        "parameters": {}
    },
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": {
        "short name": "PiecewiseConstantDecay",
        "parameters": {
            "boundaries": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": {
        "short name": "PolynomialDecay",
        "parameters": {
            "initial_learning_rate": null,
            "decay_steps": null,
            "end_learning_rate": "0.0001",
            "power": "1.0",
            "cycle": "False",
            "name": "None"
        }
    },
    "tensorflow.keras.preprocessing.image.DirectoryIterator": {
        "short name": "DirectoryIterator",
        "parameters": {
            "directory": null,
            "image_data_generator": null,
            "target_size": "(256, 256)",
            "color_mode": "'rgb'",
            "classes": "None",
            "class_mode": "'categorical'",
            "batch_size": "32",
            "shuffle": "True",
            "seed": "None",
            "data_format": "None",
            "save_to_dir": "None",
            "save_prefix": "''",
            "save_format": "'png'",
            "follow_links": "False",
            "subset": "None",
            "interpolation": "'nearest'",
            "keep_aspect_ratio": "False",
            "dtype": "None"
        }
    },
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": {
        "short name": "ImageDataGenerator",
        "parameters": {
            "featurewise_center": "False",
            "samplewise_center": "False",
            "featurewise_std_normalization": "False",
            "samplewise_std_normalization": "False",
            "zca_whitening": "False",
            "zca_epsilon": "1e-06",
            "rotation_range": "0",
            "width_shift_range": "0.0",
            "height_shift_range": "0.0",
            "brightness_range": "None",
            "shear_range": "0.0",
            "zoom_range": "0.0",
            "channel_shift_range": "0.0",
            "fill_mode": "'nearest'",
            "cval": "0.0",
            "horizontal_flip": "False",
            "vertical_flip": "False",
            "rescale": "None",
            "preprocessing_function": "None",
            "data_format": "None",
            "validation_split": "0.0",
            "interpolation_order": "1",
            "dtype": "None"
        }
    },
    "tensorflow.keras.preprocessing.image.Iterator": {
        "short name": "Iterator",
        "parameters": {
            "n": null,
            "batch_size": null,
            "shuffle": null,
            "seed": null
        }
    },
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": {
        "short name": "NumpyArrayIterator",
        "parameters": {
            "x": null,
            "y": null,
            "image_data_generator": null,
            "batch_size": "32",
            "shuffle": "False",
            "sample_weight": "None",
            "seed": "None",
            "data_format": "None",
            "save_to_dir": "None",
            "save_prefix": "''",
            "save_format": "'png'",
            "subset": "None",
            "ignore_class_split": "False",
            "dtype": "None"
        }
    },
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": {
        "short name": "TimeseriesGenerator",
        "parameters": {
            "data": null,
            "targets": null,
            "length": null,
            "sampling_rate": "1",
            "stride": "1",
            "start_index": "0",
            "end_index": "None",
            "shuffle": "False",
            "reverse": "False",
            "batch_size": "128"
        }
    },
    "tensorflow.keras.preprocessing.text.Tokenizer": {
        "short name": "Tokenizer",
        "parameters": {
            "num_words": "None",
            "filters": "'!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~\\t\\n'",
            "lower": "True",
            "split": "' '",
            "char_level": "False",
            "oov_token": "None",
            "analyzer": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.utils.experimental.DatasetCreator": {
        "short name": "DatasetCreator",
        "parameters": {
            "dataset_fn": null,
            "input_options": "None"
        }
    },
    "tensorflow.tpu.experimental.embedding.Adagrad": {
        "short name": "Adagrad",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.AdagradMomentum": {
        "short name": "AdagradMomentum",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.Adam": {
        "short name": "Adam",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.FTRL": {
        "short name": "FTRL",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.FeatureConfig": {
        "short name": "FeatureConfig",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.SGD": {
        "short name": "SGD",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": {
        "short name": "TPUEmbedding",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.TPUEmbeddingForServing": {
        "short name": "TPUEmbeddingForServing",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.TPUEmbeddingV0": {
        "short name": "TPUEmbeddingV0",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.TableConfig": {
        "short name": "TableConfig",
        "parameters": {}
    },
    "tensorflow.compat.v1.data.experimental.CsvDataset": {
        "short name": "CsvDataset",
        "parameters": {
            "filenames": null,
            "record_defaults": null,
            "compression_type": "None",
            "buffer_size": "None",
            "header": "False",
            "field_delim": "','",
            "use_quote_delim": "True",
            "na_value": "''",
            "select_cols": "None",
            "exclude_cols": "None"
        }
    },
    "tensorflow.compat.v1.data.experimental.RandomDataset": {
        "short name": "RandomDataset",
        "parameters": {
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.data.experimental.SqlDataset": {
        "short name": "SqlDataset",
        "parameters": {
            "driver_name": null,
            "data_source_name": null,
            "query": null,
            "output_types": null
        }
    },
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": {
        "short name": "CentralStorageStrategy",
        "parameters": {
            "compute_devices": "None",
            "parameter_device": "None"
        }
    },
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": {
        "short name": "MultiWorkerMirroredStrategy",
        "parameters": {
            "communication": "tf.distribute.experimental.CollectiveCommunication.AUTO",
            "cluster_resolver": "None"
        }
    },
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": {
        "short name": "ParameterServerStrategy",
        "parameters": {
            "cluster_resolver": "None"
        }
    },
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": {
        "short name": "TPUStrategy",
        "parameters": {
            "tpu_cluster_resolver": "None",
            "steps_per_run": "None",
            "device_assignment": "None"
        }
    },
    "tensorflow.compat.v1.estimator.experimental.KMeans": {
        "short name": "KMeans",
        "parameters": {
            "num_clusters": null,
            "model_dir": "None",
            "initial_clusters": "RANDOM_INIT",
            "distance_metric": "SQUARED_EUCLIDEAN_DISTANCE",
            "seed": "None",
            "use_mini_batch": "True",
            "mini_batch_steps_per_iteration": "1",
            "kmeans_plus_plus_num_retries": "2",
            "relative_tolerance": "None",
            "config": "None",
            "feature_columns": "None"
        }
    },
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": {
        "short name": "InputPipelineConfig",
        "parameters": {}
    },
    "tensorflow.compat.v1.estimator.tpu.RunConfig": {
        "short name": "RunConfig",
        "parameters": {
            "tpu_config": "None",
            "evaluation_master": "None",
            "master": "None",
            "cluster": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": {
        "short name": "TPUConfig",
        "parameters": {
            "iterations_per_loop": "2",
            "num_shards": "None",
            "num_cores_per_replica": "None",
            "per_host_input_for_training": "True",
            "tpu_job_name": "None",
            "initial_infeed_sleep_secs": "None",
            "input_partition_dims": "None",
            "eval_training_input_configuration": "InputPipelineConfig.PER_HOST_V1",
            "experimental_host_call_every_n_steps": "1",
            "experimental_allow_per_host_v2_parallel_get_next": "False",
            "experimental_feed_hook": "None"
        }
    },
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": {
        "short name": "TPUEstimator",
        "parameters": {
            "model_fn": "None",
            "model_dir": "None",
            "config": "None",
            "params": "None",
            "use_tpu": "True",
            "train_batch_size": "None",
            "eval_batch_size": "None",
            "predict_batch_size": "None",
            "batch_axis": "None",
            "eval_on_tpu": "True",
            "export_to_tpu": "True",
            "export_to_cpu": "True",
            "warm_start_from": "None",
            "embedding_config_spec": "None",
            "export_saved_model_api_version": "ExportSavedModelApiVersion.V1"
        }
    },
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": {
        "short name": "TPUEstimatorSpec",
        "parameters": {
            "mode": null,
            "predictions": "None",
            "loss": "None",
            "train_op": "None",
            "eval_metrics": "None",
            "export_outputs": "None",
            "scaffold_fn": "None",
            "host_call": "None",
            "training_hooks": "None",
            "evaluation_hooks": "None",
            "prediction_hooks": "None"
        }
    },
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": {
        "short name": "TensorBoard",
        "parameters": {
            "log_dir": "'./logs'",
            "histogram_freq": "0",
            "batch_size": "32",
            "write_graph": "True",
            "write_grads": "False",
            "write_images": "False",
            "embeddings_freq": "0",
            "embeddings_layer_names": "None",
            "embeddings_metadata": "None",
            "embeddings_data": "None",
            "update_freq": "'epoch'",
            "profile_batch": "2"
        }
    },
    "tensorflow.compat.v1.keras.initializers.RandomNormal": {
        "short name": "RandomNormal",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.RandomUniform": {
        "short name": "RandomUniform",
        "parameters": {
            "minval": "-0.05",
            "maxval": "0.05",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": {
        "short name": "TruncatedNormal",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.he_normal": {
        "short name": "he_normal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.he_uniform": {
        "short name": "he_uniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.lecun_normal": {
        "short name": "lecun_normal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": {
        "short name": "lecun_uniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.keras.layers.BatchNormalization": {
        "short name": "BatchNormalization",
        "parameters": {
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "'zeros'",
            "gamma_initializer": "'ones'",
            "moving_mean_initializer": "'zeros'",
            "moving_variance_initializer": "'ones'",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "renorm": "False",
            "renorm_clipping": "None",
            "renorm_momentum": "0.99",
            "fused": "None",
            "trainable": "True",
            "virtual_batch_size": "None",
            "adjustment": "None",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": {
        "short name": "CuDNNGRU",
        "parameters": {
            "units": null,
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": {
        "short name": "CuDNNLSTM",
        "parameters": {
            "units": null,
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.DenseFeatures": {
        "short name": "DenseFeatures",
        "parameters": {
            "feature_columns": null,
            "trainable": "True",
            "name": "None",
            "partitioner": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.GRU": {
        "short name": "GRU",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "reset_after": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.GRUCell": {
        "short name": "GRUCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "reset_after": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.LSTM": {
        "short name": "LSTM",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.LSTMCell": {
        "short name": "LSTMCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.utils.DeterministicRandomTestTool": {
        "short name": "DeterministicRandomTestTool",
        "parameters": {}
    },
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": {
        "short name": "BasicLSTMCell",
        "parameters": {
            "num_units": null,
            "forget_bias": "1.0",
            "state_is_tuple": "True",
            "activation": "None",
            "reuse": "None",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": {
        "short name": "BasicRNNCell",
        "parameters": {
            "num_units": null,
            "activation": "None",
            "reuse": "None",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": {
        "short name": "DeviceWrapper",
        "parameters": {
            "cell": null,
            "device": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": {
        "short name": "DropoutWrapper",
        "parameters": {
            "cell": null,
            "input_keep_prob": "1.0",
            "output_keep_prob": "1.0",
            "state_keep_prob": "1.0",
            "variational_recurrent": "False",
            "input_size": "None",
            "dtype": "None",
            "seed": "None",
            "dropout_state_filter_visitor": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": {
        "short name": "GRUCell",
        "parameters": {
            "num_units": null,
            "activation": "None",
            "reuse": "None",
            "kernel_initializer": "None",
            "bias_initializer": "None",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": {
        "short name": "LSTMCell",
        "parameters": {
            "num_units": null,
            "use_peepholes": "False",
            "cell_clip": "None",
            "initializer": "None",
            "num_proj": "None",
            "proj_clip": "None",
            "num_unit_shards": "None",
            "num_proj_shards": "None",
            "forget_bias": "1.0",
            "state_is_tuple": "True",
            "activation": "None",
            "reuse": "None",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": {
        "short name": "LSTMStateTuple",
        "parameters": {
            "c": null,
            "h": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": {
        "short name": "MultiRNNCell",
        "parameters": {
            "cells": null,
            "state_is_tuple": "True"
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": {
        "short name": "RNNCell",
        "parameters": {
            "trainable": "True",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": {
        "short name": "ResidualWrapper",
        "parameters": {
            "cell": null,
            "residual_fn": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": {
        "short name": "MethodNameUpdater",
        "parameters": {
            "export_dir": null
        }
    },
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": {
        "short name": "AdagradParameters",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": {
        "short name": "AdamParameters",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": {
        "short name": "FtrlParameters",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": {
        "short name": "StochasticGradientDescentParameters",
        "parameters": {}
    },
    "tensorflow.keras.dtensor.experimental.optimizers.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-07",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "name": "'Adadelta'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "learning_rate": "0.001",
            "initial_accumulator_value": "0.1",
            "epsilon": "1e-07",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "name": "'Adagrad'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.Adam": {
        "short name": "Adam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "name": "'Adam'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-07",
            "centered": "False",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "jit_compile": "False",
            "name": "'RMSprop'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.SGD": {
        "short name": "SGD",
        "parameters": {
            "learning_rate": "0.01",
            "momentum": "0.0",
            "nesterov": "False",
            "amsgrad": "False",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "jit_compile": "False",
            "name": "'SGD'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.layers.experimental.preprocessing.HashedCrossing": {
        "short name": "HashedCrossing",
        "parameters": {
            "num_bins": null,
            "output_mode": "'int'",
            "sparse": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": {
        "short name": "PreprocessingLayer",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": {
        "short name": "EmbeddingConfigSpec",
        "parameters": {
            "feature_columns": "None",
            "optimization_parameters": "None",
            "clipping_limit": "None",
            "pipeline_execution_with_tensor_core": "False",
            "experimental_gradient_multiplier_fn": "None",
            "feature_to_config_dict": "None",
            "table_to_config_dict": "None",
            "partition_strategy": "'div'",
            "profile_data_directory": "None"
        }
    }
}